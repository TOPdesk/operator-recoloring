/* ==UserStyle==
@name           Recoloring TOPdesk operator section
@namespace      github.com/topdesk/topdesk-operator-recoloring
@version        2.3.0
@description    Override the colors of the TOPdesk operator section, for accessibility purposes. 
@homepageURL    https://github.com/TOPdesk/operator-recoloring
@supportURL     https://github.com/TOPdesk/operator-recoloring/issues
@license        MIT
@preprocessor   default
@var color background "Background" #0c0c0c
@var text background-filter "Background filter" brightness(0) saturate(100%) invert(0%) sepia(11%) saturate(1945%) hue-rotate(61deg) brightness(105%) contrast(91%)
@var color on-background "On background" #fcfcfc
@var text on-background-filter "On background filter" brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(7500%) hue-rotate(178deg) brightness(129%) contrast(98%)
@var color selection "Selection" rgba(252, 252, 252, 0.99)
@var color on-selection "On selection" #0c0c0c
@var color surface "Surface" #404040
@var text surface-filter "Surface filter" brightness(0) saturate(100%) invert(19%) sepia(0%) saturate(1%) hue-rotate(180deg) brightness(102%) contrast(82%)
@var color on-surface "On surface" #fcfcfc
@var text on-surface-filter "On surface filter" brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(7500%) hue-rotate(178deg) brightness(129%) contrast(98%)
@var color disabled "Disabled" #404040
@var text disabled-filter "Disabled filter" brightness(0) saturate(100%) invert(19%) sepia(0%) saturate(1%) hue-rotate(180deg) brightness(102%) contrast(82%)
@var color on-disabled "On disabled" #8c8c8c 
@var text on-disabled-filter "On disabled filter" brightness(0) saturate(100%) invert(62%) sepia(0%) saturate(407%) hue-rotate(172deg) brightness(89%) contrast(89%)
@var color primary "Primary" #eda911
@var text primary-filter "Primary filter" brightness(0) saturate(100%) invert(71%) sepia(67%) saturate(1479%) hue-rotate(354deg) brightness(97%) contrast(92%)
@var color primary-muted "Primary muted" #d5970e
@var text primary-muted-filter "Primary muted filter" brightness(0) saturate(100%) invert(66%) sepia(52%) saturate(3051%) hue-rotate(7deg) brightness(95%) contrast(89%)
@var color on-primary "On primary" #0c0c0c
@var text on-primary-filter "On primary filter" brightness(0) saturate(100%) invert(0%) sepia(11%) saturate(1945%) hue-rotate(61deg) brightness(105%) contrast(91%)
@var color error "Error" #FF0070
@var text error-filter "Error filter" brightness(0) saturate(100%) invert(16%) sepia(54%) saturate(7483%) hue-rotate(326deg) brightness(100%) contrast(109%)
@var color on-error "On error" #0c0c0c
@var text on-error-filter "On error filter" brightness(0) saturate(100%) invert(0%) sepia(11%) saturate(1945%) hue-rotate(61deg) brightness(105%) contrast(91%)
==/UserStyle== */

@-moz-document regexp("http(s)?://.*/tas/secure/mango/.*"),
               regexp("http(s)?://.*/services/workflows-v2.*"),
               regexp("http(s)?://.*/tas/secure/.*?action=.*"),
               regexp("http(s)?://.*/tas/secure/suggestions/.*"),
               regexp("http(s)?://.*/tas/secure/homescreen-html-widgets/.*"),
               regexp("http(s)?://.*/tas/secure/shareandsubscribe/.*"),
               regexp("http(s)?://.*/tas/secure/assetmgmt/.*"),
               regexp("http(s)?://.*/tas/secure/emaileditor/.*") {
  /*
 * Button
 */

/* Default button */
[mtype="button"]:not([guielement="hyperlink"]),
[guielement="toolbar_button"],
body.popup .divpopupcontainer .divpopupclientarea button,
.suggestionsWidget .suggestionsWidget-toggleButton,
.suggestionsWidget .suggestionsWidget-newKIButton,
.suggestionsWidget .help-button,
.suggestionsWidget .suggestionsWidget-intro .intro-button,
body[cardType="naturalselection"] .button,
div#checklist .button {
    --text-color: var(--on-background);
    --filter: var(--on-background-filter);
    
    background: var(--background);
    border-color: var(--on-background);
    color: var(--text-color);
}
[guielement="toolbar_button"] > [guielement="toolbar_button_label"] {
    color: var(--text-color);
}
[guielement="toolbar_button"] > [guielement="icon"] {
    filter: var(--filter);
}

[mtype="button"]:not([guielement="hyperlink"]):hover,
[guielement="toolbar_button"]:hover,
[guielement="toolbar_button"][mstyles~="toolbar_menu_opened"],
body.popup .divpopupcontainer .divpopupclientarea button:hover,
.suggestionsWidget .suggestionsWidget-toggleButton:hover,
.suggestionsWidget .suggestionsWidget-newKIButton:hover,
.suggestionsWidget .help-button:hover,
.suggestionsWidget .suggestionsWidget-intro .intro-button:hover,
body[cardType="naturalselection"] .button:hover,
div#checklist .button:hover {
    background: var(--on-background);
    border-color: var(--on-background);
    
    --text-color: var(--background);
    --filter: var(--background-filter);
}

[mtype="button"]:not([guielement="hyperlink"]):active,
[guielement="toolbar_button"]:active,
body.popup .divpopupcontainer .divpopupclientarea button:active,
.suggestionsWidget .suggestionsWidget-toggleButton:active,
.suggestionsWidget .suggestionsWidget-newKIButton:active,
.suggestionsWidget .help-button:active,
.suggestionsWidget .suggestionsWidget-intro .intro-button:active,
body[cardType="naturalselection"] .button:active,
div#checklist .button:active {
    background: var(--surface);
    border-color: var(--on-surface);
    
    --text-color: var(--on-surface);
    --filter: var(--on-surface-filter);
}


/* Preferred button / Blue (toolbar) button / Bookmark button*/
[mtype="button"][guielement="preferred_button"],
[mtype="button"][mstyles~="default-button"],
[guielement="toolbar_button"][mstyles~="blue"],
[guielement="toolbar_button"][mstyles~="orange"],
body.popup .divpopupcontainer .divpopupclientarea button.primary,
.suggestionsWidget .suggestionsWidget-searchButton,
div#checklist .button.is-primary {
    background: var(--primary);
    border-color: var(--primary);
    
    --text-color: var(--on-primary);
    --filter: var(--on-primary-filter);
}

[mtype="button"][guielement="preferred_button"]:hover,
[mtype="button"][mstyles~="default-button"]:hover,
[guielement="toolbar_button"][mstyles~="blue"]:hover,
[guielement="toolbar_button"][mstyles~="orange"]:hover,
body.popup .divpopupcontainer .divpopupclientarea button.primary:hover,
.suggestionsWidget .suggestionsWidget-searchButton:hover,
div#checklist .button.is-primary:hover {
    background: var(--primary-muted);
    border-color: var(--primary-muted);
    
    --text-color: var(--on-primary);
    --filter: var(--on-primary-filter);
}

[mtype="button"][guielement="preferred_button"]:active,
[mtype="button"][mstyles~="default-button"]:active,
[guielement="toolbar_button"][mstyles~="blue"]:active,
[guielement="toolbar_button"][mstyles~="orange"]:active,
body.popup .divpopupcontainer .divpopupclientarea button.primary:active,
.suggestionsWidget .suggestionsWidget-searchButton:active,
div#checklist .button.is-primary:active {
    background: var(--on-primary);
    border-color: var(--primary);
    
    --text-color: var(--primary);
    --filter: var(--primary-filter);
}

/* Disabled button */
[mtype="button"][disabled="true"],
[mtype="button"][disabled="true"]:hover,
[guielement="toolbar_button"][disabled="true"],
[guielement="toolbar_button"][disabled="true"]:hover,
div#checklist .button[disabled],
div#checklist .button[disabled]:hover {
    background: var(--disabled);
    border-color: var(--on-disabled);
    
    --text-color: var(--on-disabled);
    --filter: var(--on-disabled-filter);
    
    pointer-events: none;
}

/* Tab bar */
[mstyles~="header_bar"] [guielement="icon-button"] {
    filter: var(--on-surface-filter);
}
[mstyles~="header_bar"] [guielement="icon-button"]:hover {
    filter: var(--primary-filter);
}

/* Quicklaunch buttons */
div[mtype="group"][mstyles~="ql-button"] {
  background: transparent;
  --filter: var(--on-surface-filter);
  outline-offset: -2px !important;
}
div[mtype="group"][mstyles~="ql-button"] > input,
div[mtype="group"][mstyles~="ql-button"] > input + div[mtype="label"] {
  filter: var(--filter);
  background: transparent !important;
}

div[mtype="group"][mstyles~="ql-button"]:hover,
div[mtype="group"][mstyles~="ql-button"]:focus {
  --filter: var(--primary-filter);
}

div[mtype="group"][mstyles~="ql-button"]:active {
  background: var(--background);
  --filter: var(--primary-filter);
}


/* topdesk menu button */
div[handle="topdesk_menu"][mtype="group"][mstyles~="ql-button"] {
  background: var(--primary);
  --filter: var(--on-primary-filter);
}

div[handle="topdesk_menu"][mtype="group"][mstyles~="ql-button"]:hover,
div[handle="topdesk_menu"][mstyles~="ql-button"]:focus {
  background: var(--primary-muted);
}

div[handle="topdesk_menu"][mtype="group"][mstyles~="ql-button"]:active {
  background: var(--background);
  --filter: var(--primary-filter);
}

div[handle="windowmanagement.quicklaunch.expand"][mtype="group"][mstyles~="ql-button"] > input,
div[handle="windowmanagement.quicklaunch.expand"][mtype="group"][mstyles~="ql-button"]:hover > input,
div[handle="windowmanagement.quicklaunch.expand"][mtype="group"][mstyles~="ql-button"]:focus > input,
div[handle="windowmanagement.quicklaunch.collapse"][mtype="group"][mstyles~="ql-button"] > input,
div[handle="windowmanagement.quicklaunch.collapse"][mtype="group"][mstyles~="ql-button"]:hover > input,
div[handle="windowmanagement.quicklaunch.collapse"][mtype="group"][mstyles~="ql-button"]:focus > input,
div[handle="menu_action_edit"][mtype="group"][mstyles~="ql-button"] > input,
div[handle="menu_action_edit"][mtype="group"][mstyles~="ql-button"]:hover > input,
div[handle="menu_action_edit"][mtype="group"][mstyles~="ql-button"]:focus > input {
  /* These are non-transparent action buttons */
  filter: none;
}

button#notifications-icon {
  /* iframe is too tiny to show the normal outline */
  outline-offset: -2px !important;
}

button#notifications-icon::before {
  content: "";
  background: inherit;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: var(--on-surface-filter);
}
button#notifications-icon:hover::before {
  filter: var(--primary-filter);
}

span#unread-notification-count {
  background: var(--primary);
  color: var(--on-primary);
  border: 1px solid var(--surface);
}

/* Buttons with a background image */
.suggestionsWidget .suggestionsWidget-searchButton,
.suggestionsWidget .suggestionsWidget-toggleButton,
.suggestionsWidget .suggestionsWidget-newKIButton,
.suggestionsWidget .help-button {
    position: relative;
}
.suggestionsWidget .suggestionsWidget-searchButton:before,
.suggestionsWidget .suggestionsWidget-toggleButton:before,
.suggestionsWidget .suggestionsWidget-newKIButton:before,
.suggestionsWidget .help-button:before {
    content: '';
    position: absolute;
    filter: var(--filter);
    top: 7px;
    height: 16px;
    width: 16px; 
    pointer-events: none;
}

/* Knowledge base popup search button */
.suggestionsWidget .suggestionsWidget-searchButton:before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath d='M15.9 14.2L12 10.3c.6-.9 1-2.1 1-3.3 0-3.3-2.7-6-6-6S1 3.7 1 7s2.7 6 6 6c1.2 0 2.3-.4 3.2-.9l3.9 3.9 1.8-1.8zM3 7c0-2.2 1.8-4 4-4s4 1.8 4 4-1.8 4-4 4-4-1.8-4-4z'/%3E%3C/svg%3E");
  left: 7px;
}

/* Knowledge base popup toggle button */
.suggestionsWidget .suggestionsWidget-toggleButton:before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath d='M10.5 11.5L6.9 8l3.6-3.5 1 1L9.1 8l2.4 2.5z'/%3E%3Cpath d='M6.5 11.5L2.9 8l3.6-3.5 1 1L5.1 8l2.4 2.5z'/%3E%3C/svg%3E");
  left: -1px;
  top: -1px;
}

/* Knowledge base popup create item button */
.suggestionsWidget .suggestionsWidget-newKIButton:before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath d='M2.5 13H13v1H2.5z'/%3E%3Cpath d='M15 4h-2V1c0-.6-.4-1-1-1H3C1.3 0 0 1.3 0 3v10c0 1.7 1.3 3 3 3h10v-1H2.5c-.8 0-1.5-.7-1.5-1.5S1.7 12 2.5 12H12c.6 0 1-.4 1-1V8h2c.6 0 1-.4 1-1V5c0-.6-.4-1-1-1zm0 3h-3v3h-2V7H7V5h3V2h2v3h3v2z'/%3E%3C/svg%3E");
  left: 8px;
}

/* Knowledge base popup help button */
.suggestionsWidget .help-button:before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath d='M4.8 5.5c0-.4.1-.8.4-1.2.3-.4.6-.8 1.1-1 .5-.3 1.1-.4 1.8-.4.6 0 1.2.1 1.6.3.5.2.8.5 1.1.9.2.4.4.9.4 1.3s-.1.7-.2.9c-.1.3-.3.5-.5.7s-.6.5-1.1 1l-.4.4c-.1.1-.1.2-.2.3 0 .1-.1.2-.1.2 0 .1-.1.2-.1.4-.1.5-.3.7-.7.7-.2 0-.4-.1-.6-.2-.1-.2-.2-.4-.2-.7 0-.4.1-.7.2-.9.1-.2.2-.5.4-.7l.7-.7c.3-.2.5-.4.6-.5s.2-.3.3-.4.1-.3.1-.5c0-.3-.1-.6-.4-.9-.3-.2-.6-.3-1-.3-.5 0-.8.1-1 .4-.2.2-.4.6-.6 1 0 .5-.3.7-.7.7-.2 0-.4-.1-.6-.2-.2-.2-.3-.4-.3-.6zM8 12.9c-.3 0-.5-.1-.7-.2-.2-.2-.3-.4-.3-.7s.1-.5.3-.7c.2-.2.4-.3.7-.3s.5.1.7.3.3.4.3.7-.1.5-.3.7-.4.2-.7.2z'/%3E%3C/svg%3E");
  left: -1px;
  top: -1px;
}
  /*
 * General styles
 */
html, body {
  background: transparent;
}
 
 
/* Generic focus style */
*:focus {
  z-index: 1000 !important;
  outline: 2px solid var(--on-background) !important;
  outline-offset: 2px !important;
}

/* focus fix for combobox dropdown */
input[type="text"][mtype="combobox"]:focus {
  z-index: 0 !important;
}

/* Tab bar and Quicklaunch */
[mstyles~="header_bar"],
[handle="quicklaunch_bar_settings_area"],
[handle="quicklaunch_bar_buttons_area"] {
    background: var(--surface);
    --text-color: var(--on-surface);
}


/* Page */
[guielement="toplevelwindow"],
[mstyles="left_side"] {
  background: var(--background);
  --text-color: var(--on-background);
}

body > div[guielement="toplevelwindow"] > div[style*="background-color"] {
  /* Sent emails set background in their style attribute */
  background: transparent !important;
}

/* Text */
[mtype="label"],
[mtype="rtlabel"] {
  /* 
   * --text-color should be adjusted whenever the background changes, 
   * to ensure the contained labels receive the correct color.
   */ 
  color: var(--text-color); 
}
[mtype="label"][mstyles~="error"],
[mtype="rtlabel"][mstyles~="error"] {
  /* 
   * --text-color should be adjusted whenever the background changes, 
   * to ensure the contained labels receive the correct color.
   */ 
  color: var(--error); 
}


::selection {
  background: var(--selection);
  color: var(--on-selection);
}


/* Link */
a,
[guielement="hyperlink"],
[mtype="label"][mstyles~="link_label"] {
  color: var(--primary);
}
a:hover,
[guielement="hyperlink"]:hover,
[mtype="label"][mstyles~="link_label"]:hover {
  color: var(--primary-muted);
}


/* Tooltip */
#infoboxdiv {
  background: var(--surface);
  color: var(--on-surface);
}
/* Bubble tooltips */
[guielement="infobubble-bubble"] {
  background: var(--surface);
}
[guielement="infobubble-tail"][mstyles~="south"] {
  border-top-color: var(--surface);
}
[guielement="infobubble-tail"][mstyles~="east"] {
  border-left-color: var(--surface);
}
[guielement="infobubble-tail"][mstyles~="west"] {
  border-right-color: var(--surface);
}
[guielement="infobubble-tail"][mstyles~="north"] {
  border-bottom-color: var(--surface);
}
[guielement="infobubble-bubble"] [mstyles~="infobubble-message"] {
  color: var(--on-surface);
}

/* Popup */
[guielement="subwindow"] > img:only-child {
  /* The pointer triangle used in some popups */
  filter: var(--on-background-filter);
}

[guielement="popup"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[guielement="popup-header"] {
  border-color: var(--on-surface);
}
[guielement="popup-body"] [mstyles~="memo_readonly_area"][mstyles~="popup-body-content"] {
  background: transparent;
  color: var(--text-color);
}
[guielement="popup-body"] [mstyles~="memo_readonly_area"][mstyles~="popup-body-content"] [mtype="label"]:hover {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
}
[guielement="popup-body"] [mstyles~="memo_readonly_area"][mstyles~="popup-body-content"] [mtype="label"][mstyles~="selected"] {
  background: var(--primary);
  --text-color: var(--on-primary);
}
[guielement="popup-footer"] {
  background: var(--surface);
  border-color: var(--on-surface);
}
/* HTML style popup */
body.popup .divpopupcontainer {
  background: var(--surface);
  color: var(--on-surface);
  --text-color: var(--on-surface);
}
body.popup .divpopupcontainer .divpopupheader {
  border-color: var(--on-surface);
}
body.popup .divpopupcontainer .divpopupheader .divpopuptitle {
  color: var(--on-surface);
}
body.popup .divpopupcontainer .divpopupclientarea {
  background: transparent;
}
body.popup .divpopupcontainer .divpopupclientarea .buttons,
body.popup .divpopupcontainer .divpopupclientarea .grid-settings-popup-buttons {
  background: transparent;
  border-color: var(--on-surface);
}

/* stamp popup */
body.popup .divpopupcontainer .fields .button[onclick^="MacroPopup"] {
  background: var(--background);
  color: var(--on-background);
  border-color: var(--on-background);
}
body.popup .divpopupcontainer .fields .button[onclick^="MacroPopup"]:hover {
  background: var(--on-background);
  color: var(--background);
  border-color: var(--on-background);
}
body.popup .divpopupcontainer .fields .button.disabledButton {
  background: var(--disabled);
  color: var(--on-disabled);
}

/*
 * Datepicker
 */
 [guielement="calendar-grid"] {
  /* background color creates the cell borders */
  background: var(--on-background);
}
/* day cell */
[guielement="calendar-grid"] [guielement="calendar-cell"] {
  background: var(--background);
  --text-color: var(--on-background);
}
[guielement="calendar-grid"] [guielement="calendar-cell"] [guielement="calendar-cell-label"] {
  color: var(--text-color);
}
/* non-working day cell */
[guielement="calendar-grid"] [guielement="calendar-cell"][mstyles~="cal-non-working-day"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
/* Special style for 'today' to aid orientation */
[guielement="calendar-grid"] [guielement="calendar-cell"][mstyles~="cal-today"] {
  --text-color: var(--primary);
  border-color: transparent;
}
/* currently selected cell */
[guielement="calendar-grid"] [guielement="calendar-cell"][mstyles~="cal-selected"] {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
}
/* 'focused' cell */
[guielement="calendar-grid"] [guielement="calendar-cell"][mstyles~="cal-highlighted"] {
  border-color: var(--primary);
}
[guielement="calendar-grid"] [guielement="calendar-cell"][mstyles~="cal-selected"][mstyles~="cal-highlighted"] {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
  border-color: var(--on-primary);
}
/* 'go to today' button */
[guielement="datepicker-today"] {
  background: transparent;
  color: var(--primary);
}
[guielement="datepicker-today"]:hover {
  background: var(--on-surface);
  color: var(--surface);
}
  /*
 * Tab
 */

/* Default */
[guielement="window_tab"] {
  background: var(--surface);
  border-color: var(--on-surface);
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);
}
[guielement="window_tab"] [guielement="icon"],
[guielement="window_tab"] [guielement="icon-button"]{
  filter: var(--filter);
}
/* Status icon (dual color, can't be recolored) */
[guielement="window_tab"] [guielement="icon"]:nth-of-type(2) {
  filter: none;
}

 
/* Current */
[guielement="window_tab"][mstyles~="active"] {
  background: var(--background);
  border-bottom-color: var(--background);
  border-top: 3px solid var(--primary);
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}

/*
* Card tab
*/

/* Current */
[role="tablist"] [role="tab"][aria-selected="true"],
[role="tablist"] [role="tab"][aria-selected="true"] * {
  border-bottom-color: var(--primary);
  color: var(--primary);
}

/* HTML style tabs */
.subtabscontainer .subtabcaptions .tabcaption {
  border-color: var(--text-color) !important;
}
.subtabscontainer .subtabcaptions .tabcaption a {
  color: var(--text-color);
}
.subtabscontainer .subtabcaptions .tabcaption.active {
  --text-color: var(--primary);
}
  /* 
 * Menu
 */
[guielement="topdesk-menu"],
[guielement="topdesk-submenu"],
[guielement="toolbar_menu"],
div#checklist div.menu {
  background: var(--surface);
}
[guielement="topdesk-submenu"] {
  border-left-color: var(--on-surface);
}

/* Default */
[guielement="topdesk-menu-item"],
[guielement="toolbar_menu_button"],
div#checklist div.menu [role="button"] {
  background: var(--surface);
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);
}
[guielement="topdesk-menu-item"] *,
[guielement="toolbar_menu_button"] * {
  background: transparent;
}
[guielement="topdesk-menu-item"] [guielement="topdesk-menu-icon"],
[guielement="toolbar_menu_button"] [mtype="imagebutton"] {
  filter: var(--filter);
}

div#checklist div.menu [role="button"] {
  color: var(--text-color);
}

/* Hover */
[guielement="topdesk-menu-item"]:hover,
[guielement="toolbar_menu_button"]:hover,
div#checklist div.menu [role="button"]:hover {
  background: var(--on-surface);
  --text-color: var(--surface);
  --filter: var(--surface-filter);
}

/* Focus */
[guielement="topdesk-menu-item"]:focus,
[guielement="toolbar_menu_button"]:focus,
div#checklist div.menu [role="button"]:focus {
  outline: none !important;
  background: var(--on-surface);
  --text-color: var(--surface);
  --filter: var(--surface-filter);
}

/* Disabled */
[guielement="topdesk-menu-item"][disabled="true"],
[guielement="toolbar_menu_button"][disabled="true"],
div#checklist div.menu [role="button"][aria-disabled="true"] {
  background: var(--disabled);
  --text-color: var(--on-disabled);
  --filter: var(--on-disabled-filter);
}

/* Separators */
[guielement="topdesk-menu-separator"],
[guielement="toolbar_menu_group"],
div#checklist div.menu li .separator {
  border-color: var(--on-surface);
}

/* Selected item */
[guielement="topdesk-menu-item"][mstyles~="topdesk-menu-item-active"] {
  border-left-color: var(--primary);
}

/* Suppressing focus style on menu after click on Menu button */
[guielement="toolbar_menu"] > [mtype="group"]:focus {
  outline: none !important;
}
  /* 
 * Action / Request
 */


/*
 * Request
 */
[guielement="pt-request-container"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="pt-request-container"] [guielement="pt-memo"] {
  background: transparent;
  border-top-color: var(--on-surface);
}
/* Collapsed entry fade-out */
[guielement="pt-request-container"] [handle="crt-gradient"] {
  background-image: linear-gradient(transparent, var(--surface)) !important;
}

/* Flagged request entries */
[guielement="pt-request-container"] [guielement="pt-memo"][mstyles~="pt-flagged"] {
  background: var(--primary);
  --text-color: var(--on-primary);
}
[guielement="pt-request-container"] [mstyles~="pt-flagged"] a {
  color: var(--on-primary);
}
/* Collapsed flagged entry fade-out */
[guielement="pt-request-container"] [mstyles~="pt-flagged"][handle="crt-gradient"] {
  background-image: linear-gradient(transparent, var(--primary)) !important;
}


/* Links */
[guielement="pt-request-container"] div[rt] a,
[guielement="pt-request-container"] a /* Support for versions before october 2020 */ {
  color: var(--primary);
}

/* Speech bubble tail */
[guielement="pt-request-pointer"] {
  border-right-color: var(--surface);
}

/* Expand/Collapse buttons */
[guielement="pt-request-container"] [guielement="crt-button-expand"],
[guielement="pt-request-container"] [guielement="crt-button-collapse"] {
  background: var(--background);
  color: var(--on-background);
  border-color: var(--on-background);
}



/*
* Action
*/
[guielement="pt-trail-container"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="pt-trail"],
[guielement="pt-trail-container"] [guielement="pt-mail"],
[guielement="pt-trail-container"] [guielement="pt-attachment"],
[guielement="pt-trail-container"] [guielement="pt-memo"] {
  background: transparent;
  border-top-color: var(--on-surface);
}
/* Collapsed entry fade-out */
[guielement="pt-trail-container"] [handle="crt-gradient"] {
  background-image: linear-gradient(transparent, var(--surface)) !important;
}


/* Flagged action entries */
[guielement="pt-trail-container"] [guielement="pt-memo"][mstyles~="pt-flagged"] {
  background: var(--primary);
  --text-color: var(--on-primary);
}
[guielement="pt-trail-container"] [guielement="pt-memo"][mstyles~="pt-flagged"] a {
  color: var(--on-primary);
}
[guielement="pt-trail-container"] div[rt] a,
[guielement="pt-trail-container"] a, /* Support for versions before october 2020 */
[guielement="pt-trail-container"] [guielement="pt-linkbutton"] {
  color: var(--primary);
}

/* Collapsed flagged entry fade-out */
[guielement="pt-trail-container"] [mstyles~="pt-flagged"][handle="crt-gradient"] {
  background-image: linear-gradient(transparent, #eda911) !important;
}

/* Action entry filter button */
[mtype="button"][guielement="pt-channel-button"] {
  color: var(--primary);
  background: transparent;
}
[mtype="button"][guielement="pt-channel-button"]:hover {
  color: var(--primary-muted);
  background: transparent;
}
[mtype="button"][guielement="pt-channel-button"]:active {
  color: var(--background);
  background: var(--primary);
}

/* Expand/Collapse buttons */
[guielement="pt-trail-container"] [guielement="crt-button-expand"],
[guielement="pt-trail-container"] [guielement="crt-button-collapse"] {
  background: var(--background);
  color: var(--on-background);
  border-color: var(--on-background);
}

/* Mail and attachment entry icons (only present in Action) */
[guielement="pt-mail"] img[guielement="icon"],
[guielement="pt-attachment"] img[guielement="icon"] {
  filter: var(--on-surface-filter);
}


/* Invisible for caller */
[guielement="pt-trail-container"] [guielement="pt-entry-sidebar"][mstyles="pt-invisible"] {
  background: repeating-linear-gradient(-45deg, var(--surface) 0px, var(--surface) 8px, var(--background) 8px, var(--background) 16px);
}

/*
* Rich text
*/

/* edit area */
[guielement="pt-richtextarea"] {
  background: var(--background);
  border-color: var(--on-background);
}
[guielement="pt-memo-editable"] {
  background: transparent;
}

/* toolbar buttons, the image gets washed out in toggled state :-( */
[guielement="pt-richtextbuttonbar"] [guielement="imagebutton"],
[guielement="pt-richtextbuttonbar"] [guielement="icon-button"] {
  filter: var(--on-surface-filter);
}
[guielement="pt-richtextbuttonbar"] [guielement="imagebutton"]:hover,
[guielement="pt-richtextbuttonbar"] [guielement="icon-button"]:hover {
  filter: var(--primary-filter);
}
[guielement="pt-richtextbuttonbar"] [guielement="imagebutton"]:active,
[guielement="pt-richtextbuttonbar"] [guielement="icon-button"]:active {
  filter: var(--primary-muted-filter);
}
[guielement="pt-richtextbuttonbar"] [guielement="imagebutton"][disabled="true"],
[guielement="pt-richtextbuttonbar"] [guielement="icon-button"][disabled="true"] {
  filter: var(--on-disabled-filter);
}

/* stamp popup */
[guielement="memo"] {
  background: var(--background);
  --text-color: var(--on-background);
}
  
/*
 * Home, Module, and Dashboard pages
 */

/* Can't recolor the background of the banner, so need to force the color of the text to make sure it remains visible */
[handle="ie11campaign.banner.application_manager.description"],
[handle="ie11campaign.banner.application_manager.description"] + [mtype="group"] a {
    color: black;
    
}

[guielement="widget"] {
    border-color: transparent;
}
[guielement="widget_header"],
[guielement="widget_content_area"] {
    background: var(--surface);
    --text-color: var(--on-surface);
}
[guielement="widget_content_area"] {
    border-color: var(--on-surface);
}
[guielement="widget_content_area"] [guielement="icon"] {
    filter: var(--on-surface-filter);
}



/* Main pages widget / Tile widgets */
[guielement^="widget_page_image_button"] {
    background: var(--primary);
    --filter: var(--on-primary-filter);
}
[guielement^="widget_page_image_button"]:hover {
    background: var(--primary-muted);
}
[guielement^="widget_page_image_button"]:active {
    background: var(--background);
    border: 1px solid var(--primary);
    --filter: var(--on-background-filter);
}
[guielement^="widget_page_image_button"] > [guielement="icon"] {
    filter: var(--filter);
}

/* My tasks widget / Tasks per group widget */
[guielement="widget_content_area"] [mstyles~="todo_header_group"] {
    border-color: var(--on-surface);
}

/* Selections, Reports, and Shortcuts widget */
[guielement="selections_reports_content_area"] {
    background: var(--surface);
}
[guielement="selections_reports_item"] {
    background: var(--surface);
    border-color: transparent;
    --text-color: var(--on-surface);
    --filter: var(--on-surface-filter);
}
[guielement="selections_reports_item"]:hover {
    background: var(--on-surface);
    --text-color: var(--surface);
    --filter: var(--surface-filter);
}
[guielement="selections_reports_item"] [guielement="icon"] {
    filter: var(--filter);
}

/* Current major calls widget */
[handle="major_incident_widget_main"] [guielement="block_header"] {
    background: var(--surface);
}
[handle="major_incident_widget_main"] [guielement="major_incidents_button"] {
    background: transparent;
    filter: var(--on-surface-filter);
}
[handle="major_incident_widget_main"] [guielement="major_incidents_button"]:hover {
    filter: var(--primary-filter);
}
[handle="major_incident_widget_main"] [guielement="major_incidents_button"]:active {
    filter: var(--primary-muted-filter);
}

/* KPI widget */
[guielement="widget_content_area"] [mstyles~="italic_text"] {
    color: var(--text-color) !important;
}

/* Report widget */
[guielement="widget_content_area"] [guielement="image"]:not([role="presentation"]) {
    /* 
     * The report legend is included in the image itself, 
     * forcing the background to make sure the legend is visible.
     *
     * Setting a simple filter, e.g. filter: invert(1), may have 
     * a more desirable effect depending on the chosen background 
     * of the widget
     *
     * NOTE: this also affects KPI's as they can't be distinguished
     */
    background: #fcfcfc;
}

/* Conversations widget */
[guielement="conversation-reply"] {
    background: transparent;
}

[guielement="conversation-text"] a {
    color: var(--primary);
}
[guielement="conversation-text"] a:hover  {
    color: var(--primary-muted);
}
[guielement="conversation-link"] {
    background: transparent;
    color: var(--primary);
}
[guielement="conversation-link"]:hover {
    background: transparent;
    color: var(--primary-muted);
}
[guielement="conversation-number"] + [guielement="icon-button"] {
    filter: var(--primary-filter);
}
[guielement="conversation-number"] + [guielement="icon-button"]:hover {
    filter: var(--primary-muted-filter)
}

/* Navigation pane */
[guielement="navigator_container"] {
    background: var(--surface);
    border-color: transparent;
    --text-color: var(--on-surface);
    --filter: var(--on-surface-filter);
}
[guielement="navigator_item"] [guielement="icon"] {
    filter: var(--filter);
}
[guielement="navigator_item"][mstyles~="selected"] {
    background: var(--on-surface);
    --text-color: var(--surface);
    --filter: var(--surface-filter);
}

/* Selections widget / Reports widget / Shortcuts widget */
[guielement="widget"] [guielement="link_button"] {
    background: transparent;
    color: var(--primary) !important;
}
[guielement="widget"] [guielement="link_button"]:hover {
    color: var(--primary-muted) !important;
}




/* Get started widget */
div#app {
    background-image: none;
}
/* close button */
.widget-container .widget-button {
    background: transparent;
    color: var(--on-background);
    border-color: var(--on-background);
}
.widget-container .widget-button:hover {
    background: var(--primary);
    border-color: var(--primary);
    color: var(--on-primary);
}
.widget-container .widget-button:active {
    background: transparent;
    border-color: var(--primary);
    color: var(--primary);
}
/* about us button */
.welcome-widget #button {
    background: transparent;
    color: var(--on-background);
    border-color: var(--on-background);
}
.welcome-widget #button:hover {
    background: var(--primary);
    border-color: var(--primary);
    color: var(--on-primary);
}
.welcome-widget #button:active {
    background: transparent;
    border-color: var(--primary);
    color: var(--primary);
}


/* Subwidgets */
.widget-container .service-excellence-widget-frame,
.widget-container .service-excellence-widget-frame:hover,
.widget-container .getting-started-widget-frame,
.widget-container .getting-started-widget-frame:hover,
.widget-container .task-board-widget-frame,
.widget-container .task-board-widget-frame:hover {
    background: var(--surface);
}
/* header */
.widget-container .service-excellence-widget-frame h1,
.widget-container .getting-started-widget-frame h1,
.widget-container .task-board-widget-frame h1 {
    color: var(--on-surface);
}

/* Service excellence subwidget */
/* view more blogs link */
.widget-container .service-excellence-widget-frame a {
    color: var(--primary);
}
.widget-container .service-excellence-widget-frame a:hover {
    color: var(--primary-muted);
}
/* blog item */
.widget-container .service-excellence-widget-frame .rss-item a {
  background: var(--surface);
  --text-color: var(--on-surface);
}

.widget-container .service-excellence-widget-frame .rss-item a:focus,
.widget-container .service-excellence-widget-frame .rss-item a:hover {
  background: var(--on-surface);
  --text-color: var(--surface);
}

.widget-container .service-excellence-widget-frame .rss-item .rss-item-body .rss-item-content > div .fade-out-text,
.widget-container .service-excellence-widget-frame .rss-item .rss-item-header .rss-title-text,
.widget-container .service-excellence-widget-frame .rss-item .rss-item-header .display-date {
    color: var(--text-color);
}

/* Getting started subwidget */
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li,
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li .video-title {
    color: var(--on-surface);
}
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li.playing,
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li.playing .video-title{
    background: var(--primary);
    color: var(--on-primary);
}
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li a:hover,
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li a:hover .video-title,
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li a:focus,
.widget-container .getting-started-widget-frame .getting-started-widget .playlist li a:focus .video-title {
    background: var(--on-surface);
    color: var(--surface);
}


/* My calls subwidget */
.widget-container .task-board-widget-frame .task-board-widget a {
    --text-color: var(--on-surface);
}
.widget-container .task-board-widget-frame .task-board-widget a .td-icon,
.widget-container .task-board-widget-frame .task-board-widget a .content .title,
.widget-container .task-board-widget-frame .task-board-widget a .content .request,
.widget-container .task-board-widget-frame .task-board-widget a .content .request span,
.widget-container .task-board-widget-frame .task-board-widget a .display-date,
.widget-container .task-board-widget-frame .task-board-widget a .display-date .td-icon {  
    color: var(--text-color);
}
.widget-container .task-board-widget-frame .task-board-widget a:hover,
.widget-container .task-board-widget-frame .task-board-widget a:focus {
    background: var(--on-surface);
    --text-color: var(--surface);
}
.widget-container .task-board-widget-frame .task-board-widget .overview-link a {
    color: var(--primary);
}
.widget-container .task-board-widget-frame .task-board-widget .overview-link a:hover {
    background: none;
    color: var(--primary-muted);
}
.widget-container .task-board-widget-frame .task-board-widget .update-area {
    color: var(--on-surface);
}
.widget-container .task-board-widget-frame .task-board-widget .update-area button svg {
    color: var(--on-surface);
}
.widget-container .task-board-widget-frame .task-board-widget .update-area button:hover {
    background: var(--on-surface);
}
.widget-container .task-board-widget-frame .task-board-widget .update-area button:hover svg {
    color: var(--surface);
}

/* Flow chart */
[mstyles~="flowchart_block_simple"],
[mstyles~="flowchart_block_multi"],
[mstyles~="flowchart_block_dashed"],
[mstyles~="flowchart_icon_container"] {
    background: var(--background);
    border-color: var(--on-background);
}
[mstyles~="flowchart_block_empty"] {
    border-color: var(--on-surface);
}
[mstyles~="flowchart_block_multi"] {
    box-shadow: 
        1px -1px var(--background), 
        2px -2px var(--on-background), 
        3px -3px var(--background), 
        4px -4px var(--on-background);
}
[mstyles~="flowchart_icon_container"] [guielement="icon"]:last-child,
[mstyles~="flowchart_icon_container"] [guielement="icon-button"]:last-child {
    /* status icons are multicolored and thus can't be recolored */ 
    filter: none;
}
[mstyles~="flowchart_icon_container"] [guielement="icon"]:first-child,
[mstyles~="flowchart_icon_container"] [guielement="icon-button"]:first-child {
    filter: var(--on-background-filter);
}
[guielement="flowchart_label"] {
    color: var(--on-background);
}
[mtype="rectangle"] {
    border-color: var(--on-surface) !important;
}
[mstyles~="arrowhead_right"] {
    border-left-color: var(--on-surface) !important;
}
[mstyles~="arrowhead_left"] {
    border-right-color: var(--on-surface) !important;
}
[mstyles~="arrowhead_up"] {
    border-bottom-color: var(--on-surface) !important;
}
[mstyles~="arrowhead_down"] {
    border-top-color: var(--on-surface) !important;
}

/* Marketplace widget */
[guielement="no_padding_webpage_content_area"] {
    background: var(--surface);
}
a[href="https://marketplace.topdesk.com/?_sfm_solution_creator=topdesk"] {
    background-color: var(--primary);
    color: var(--on-primary);
}
a[href="https://marketplace.topdesk.com/?_sfm_solution_creator=topdesk"]:hover {
    background-color: var(--primary-muted);
}
a[href="https://marketplace.topdesk.com/?_sfm_solution_creator=topdesk"]:active {
    background-color: var(--background);
    color: var(--primary);
    border: 1px solid var(--primary);
}
  /* 
 * Knowledge base suggestions widget (as seen on call card)
 * Buttons are (mostly) styled in buttons.css
 */

.suggestionsWidget {
  background: var(--background);
  border-color: var(--primary);
}

.suggestionsWidget .suggestionsWidget-header {
  background: transparent;
  border-color: var(--on-background);
}
.suggestionsWidget .suggestionsWidget-body {
  color: var(--on-background);
}
.suggestionsWidget .suggestionsWidget-body .suggestionsWidget-filters {
  border-color: var(--on-background);
}
.suggestionsWidget .suggestionsWidget-body .suggestionsWidget-filters-language > img {
  filter: var(--on-background-filter);
}
.suggestionsWidget .suggestionsWidget-body .suggestionsWidget-filters-language > select {
  background: transparent;
  color: var(--on-background);
  border-color: var(--on-background);
  -webkit-appearance: listbox;
  -moz-appearance: listbox;
  appearance: listbox;
}
.suggestionsWidget .suggestionsWidget-body .suggestionsWidget-filters-language > select:focus {
  border-color: var(--on-background);
}
.suggestionsWidget .suggestionsWidget-body .suggestionsWidget-filters-language option {
  background: var(--background);
  color: var(--on-background);
}
.suggestionsWidget .help-button {
  border-radius: 50%;
  border: 1px solid currentColor;
}

.suggestionsWidget .suggestionsWidget-list {
  background: transparent;
}
.suggestionsWidget .suggestionsWidget-suggestion,
.suggestionsWidget .suggestionsWidget-suggestion.suggestionsWidget-suggestion-with-standard-solution {
  background: transparent;
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}
.suggestionsWidget .suggestionsWidget-suggestion > a {
  background: transparent;
  color: var(--text-color);
  border: 2px solid transparent;
}
.suggestionsWidget .suggestionsWidget-suggestion > button {
  background-color: transparent;
  filter: var(--filter);
  opacity: 1;
  border: 2px solid transparent;
}
.suggestionsWidget .suggestionsWidget-suggestion > a:hover,
.suggestionsWidget .suggestionsWidget-suggestion > a:focus {
  --text-color: var(--primary);
  outline: none !important;
  border-color: currentColor;
}

.suggestionsWidget .suggestionsWidget-suggestion > button:hover,
.suggestionsWidget .suggestionsWidget-suggestion > button:focus {
  --filter: var(--primary-filter);
  outline: none !important;
  border-color: currentColor;
}

.suggestionsWidget .suggestionsWidget-noSuggestionsFound {
  filter: var(--on-background-filter);
}

.suggestionsWidget .suggestionsWidget-intro .footer {
  background: var(--surface);
  color: var(--on-surface);
}
.suggestionsWidget .suggestionsWidget-intro .footer > a:hover {
  color: var(--primary-muted);
}

/* disabling blue focus styling */
.suggestionsWidget .suggestionsWidget-intro .intro-button:focus {
  border-color: var(--on-background);
  box-shadow: none;
}
  
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="dialog"] {
  background: var(--surface);
}
/* header */
[data-handle="shareandsubscribe_sharee_picker"] header {
  border-bottom-color: var(--on-surface);
}
[data-handle="shareandsubscribe_sharee_picker"] header > strong,
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="sharees"] > strong {
  color: var(--on-surface);
}
[data-handle="shareandsubscribe_sharee_picker"] header > button {
  filter: var(--on-surface-filter);
}

/* Search field */
[data-handle="shareandsubscribe_sharee_picker"] input[type="search"] {
  background: var(--background);
  border-color: var(--on-background);
  color: var(--on-background);
}
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search_bar"] button {
  --bg: var(--primary);
  --filter: var(--on-primary-filter);
  --border: var(--primary);
  
  position: relative;
  background: var(--bg) !important;
  border-color: var(--border) !important;
}
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search_bar"] button:hover {
  --bg: var(--primary-muted);
  --filter: var(--on-primary-filter);
  --border: var(--primary-muted);
}
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search_bar"] button:active {
  --bg: var(--background);
  --filter: var(--primary-filter);
  --border: var(--primary);
}
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search_bar"] button:before {
  content: '';
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath stroke='currentColor' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M10 10l5 5'/%3E%3Ccircle cx='5.9' cy='6' r='5' fill='none' stroke='currentColor' stroke-miterlimit='10' stroke-width='2'/%3E%3C/svg%3E");    
  
  filter: var(--filter);
  position: absolute;
  top: 8px;
  left: 8px;
  width: 16px;
  height: 16px;
}


/* non-result status messages */
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="searching"],
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="help-text"] {
  color: var(--on-background);
}
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="no-search-results"] {
  filter: var(--on-background-filter);
}

/* Search results section*/
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search-results"] {
  background: var(--background);
  color: var(--on-background);
  
  --filter: var(--on-background-filter);
  --hover-fg: var(--background);
  --hover-filter: var(--background-filter);
}

/* Sharees section */
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="sharees"] {
  color: var(--on-surface);
  
  --filter: var(--on-surface-filter);
  --hover-fg: var(--surface);
  --hover-filter: var(--surface-filter);
}

/* Items */
[data-handle="shareandsubscribe_sharee_picker"] li:hover {
  background: currentColor;
  --filter: var(--hover-filter);
  --text-color: var(--hover-fg);
}

[data-handle="shareandsubscribe_sharee_picker"] li > div,
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="search-results"] li button,
[data-handle="shareandsubscribe_sharee_picker"] [data-handle="sharees"] li button,
[data-handle="shareandsubscribe_sharee_picker"] li strong {
  color: var(--text-color);
}
[data-handle="shareandsubscribe_sharee_picker"] li img[src^="data:image/svg+xml"] {
  background: transparent;
  border: 1px solid currentColor;
  filter: var(--filter);
}
/* separator */
[data-handle="shareandsubscribe_sharee_picker"] li:not(:last-child) {
  border-bottom-color: currentColor;
}

/* Footer */
[data-handle="shareandsubscribe_sharee_picker"] footer {
  background: var(--surface);
  border-top: 1px solid var(--on-surface);
}
[data-handle="shareandsubscribe_sharee_picker"] footer > button {
  background: var(--bg) !important;
  border-color: var(--border) !important;
  color: var(--text-color) !important;
}

/* Cancel button */
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="cancel"] {
  --bg: var(--background);
  --border: var(--on-background);
  --text-color: var(--on-background);
}
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="cancel"]:hover {
  --bg: var(--on-background);
  --border: var(--on-background);
  --text-color: var(--background);
}
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="cancel"]:active {
  --bg: var(--surface);
  --border: var(--on-surface);
  --text-color: var(--on-surface);
}


/* Share button */
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="submit"] {
  --bg: var(--primary);
  --border: var(--primary);
  --text-color: var(--on-primary);
}
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="submit"]:hover {
  --bg: var(--primary-muted);
  --border-color: var(--primary-muted);
  --text-color: var(--on-primary);
}
[data-handle="shareandsubscribe_sharee_picker"] footer > button[data-handle="submit"]:active {
  --bg: var(--on-primary);
  --border: var(--primary);
  --text-color: var(--primary);
}

  /* Icons in minimized groups */
[guielement="mg-minimized-content"] [guielement="icon"] {
  filter: var(--on-background-filter);
}

/* Header buttons */
[guielement="mg-header"] input[aria-haspopup="false"] {
  filter: var(--primary-filter);
}
[guielement="mg-header"] input[aria-haspopup="false"][disabled="true"] {
  filter: var(--disabled-filter);
}

/* 
* Form 
*/

/* Default */
input[type="text"],
div[guielement="datetimecontrol"],
div[guielement="unittextbox"],
button[role="checkbox"],
button[role="radio"],
textarea[mtype="textarea"],
textarea.textarea,
body[cardType="naturalselection"] input,
body[cardType="naturalselection"] select {
  --border: var(--on-background);
  --static-filter: var(--on-background-filter);
  --button-filter: var(--on-background-filter);
  
  background: var(--background);
  color: var(--on-background);
  border-color: var(--border);
}
textarea[mtype="textarea"] {
  border-color: var(--border) !important
}

/* Readonly */
input[type="text"][readonly="true"],
div[guielement="datetimecontrol"][readonly="true"],
div[guielement="unittextbox"][readonly="true"],
button[role="checkbox"][readonly="true"],
button[role="radio"][readonly="true"],
textarea[mtype="textarea"][readonly="true"]{
  --border: var(--disabled);
  --static-filter: var(--on-background-filter);
  --button-filter: var(--disabled-filter);
  
  background: var(--background);
  color: var(--on-background);
}

/* Disabled */
input[type="text"][disabled="true"],
div[guielement="datetimecontrol"][disabled="true"],
div[guielement="unittextbox"][disabled="true"],
button[role="checkbox"][disabled="true"],
button[role="radio"][disabled="true"],
textarea[mtype="textarea"][disabled="true"],
textarea.textarea:disabled {
  --border: var(--on-disabled);
  --static-filter: var(--on-disabled-filter);
  --button-filter: var(--on-disabled-filter);
  
  background: var(--disabled);
  color: var(--on-disabled);
}

/* Error */
input[type="text"][mstyles~="error"],
div[guielement="datetimecontrol"][mstyles~="error"],
div[guielement="unittextbox"][mstyles~="error"],
textarea[mtype="textarea"][mstyles~="error"],
textarea.textarea:invalid {
  --border: var(--error);
  --static-filter: var(--error-filter);
  --button-filter: var(--on-background-filter);
  
  background: var(--background);
  color: var(--error);
}


/* Combobox dropdown icon */
body[cardType="naturalselection"] span.arrowdown,
input[type="text"][mtype="combobox"] + div > img  {
  filter: var(--on-background-filter);
}
input[type="text"][mtype="combobox"][readonly="true"] + div > img,
input[type="text"][mtype="combobox"][disabled="true"] + div > img  {
  filter: var(--on-disabled-filter);
}
input[type="text"][mtype="combobox"][mstyles~="error"] + div > img {
  filter: var(--error-filter);
}

/* Combobox options */
body[cardType="naturalselection"] option,
[mango_combobox="true"][role="option"] {
  background: var(--background) !important;
  color: var(--on-background) !important;
}
[mango_combobox="true"][role="option"][style*="highlight"] {
  background: var(--on-background) !important;
  color: var(--background) !important;
}


/* Datepicker button */
div[guielement="datetimecontrol"] > input[guielement="icon-button"] {
  filter: var(--button-filter);
}


/* Unit text box */
div[guielement="unittextbox"] > img, 
div[guielement="unittextbox"] > [guielement="unittextbox_prefix"], 
div[guielement="unittextbox"] > [guielement="unittextbox_suffix"] {
  background: transparent;
}
div[guielement="unittextbox"] > img {
  filter: var(--static-filter); 
}


/* Checkbox */
button[role="checkbox"] {
  box-sizing: border-box;
  border: 1px solid var(--border);
}
button[role="checkbox"] > img {
  display: none !important;
}

/* checkmark */
button[role="checkbox"][aria-checked="true"]::before {
  content: '';
  position: absolute;
  border-bottom: 2px solid currentColor;
  border-left: 2px solid currentColor;
  top: 2px;
  left: 2px;
  width: 9px;
  height: 5px;
  transform: rotate(-45deg)
}


/* Radio button */
button[role="radio"] > img {
  display: none !important;
}
button[role="radio"] {
  border: 1px solid var(--border);
  border-radius: 50%;
}
/* dot */
button[role="radio"][aria-checked="true"]::before {
  content: '';
  position: absolute;
  border-radius: 50%;
  top: 4px;
  left: 4px;
  width: 8px;
  height: 8px;
  background: currentColor;
}

/* Search */
[guielement="sp-search-main-group"],
[mstyles~="quicklaunch_search_background"] {
  background: transparent;
  border: 1px solid var(--primary-muted);
}
[guielement="sp-search-main-group"] [guielement="button"],
[guielement="quicklaunch_search_button"] {
  background: var(--primary);
  border-color: var(--primary);
  --filter: var(--on-primary-filter);
}
[guielement="sp-search-main-group"] [guielement="button"]:hover,
[guielement="quicklaunch_search_button"]:hover {
  background: var(--primary-muted);
  border-color: var(--primary-muted);
}
[guielement="sp-search-main-group"] [guielement="button"]:active,
[guielement="quicklaunch_search_button"]:active {
  background: var(--background);
  border-color: var(--primary);
  --filter: var(--primary-filter);
}
[guielement="sp-search-main-group"] [guielement="button"] [guielement="icon"],
[guielement="quicklaunch_search_button"] [guielement="icon"] {
  filter: var(--filter);
}

/* List control */
[guielement="list_control"],
[guielement="list_control"] [guielement="list_item"] {
  background: var(--background);
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}
[guielement="list_control"] [guielement="list_item"]:hover {
  background: var(--on-background);
  --text-color: var(--background);
  --filter: var(--background-filter);
}
[guielement="list_control"] [guielement="list_item"][mstyles~="selected"],
[guielement="list_control"] [guielement="list_item"] [mstyles~="selected_suggestion"] {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}

[guielement="list_control"] [guielement="list_item"] [mtype="label"] {
  color: var(--text-color) !important;
}
[guielement="list_control"] [guielement="list_item"] [guielement="icon"] {
  filter: var(--filter);
}

/* memofield buttons */
.memowithheader .images img {
  filter: var(--on-surface-filter);
}
.memowithheader .images img:hover {
  filter: var(--primary-filter);
}
.memowithheader .images img:active {
  filter: var(--primary-muted-filter);
}
.memowithheader .images img[disabled="true"] {
  filter: var(--on-disabled-filter);
}

/*
 * HTML style form elements
 */
table.fields .label {
  color: var(--text-color);
}
/* select */
table.fields .arrowdown {
  filter: var(--on-background-filter);
}
#dropdownlayer .dropdownselect {
  background: var(--background);
  color: var(--on-background);
}
.optionvalue {
  color: var(--text-color);
}

/* list control */
div.fields .selectlist {
  background: var(--background);
}
div.fields .selectlist .selected {
  background: var(--on-background);
  color: var(--background);
}

/* search with autocomplete */
table.textinput {
  background: var(--background);
}
table.textinput #queryfield {
  color: var(--on-background);
}
table.textinput + #suggestionbox {
  background: var(--background);
}
table.textinput + #suggestionbox .dropdown {
  color: var(--on-background);
}
table.textinput + #suggestionbox .dropdown[style*="background"] {
  background: var(--on-background) !important;
  color: var(--background);
}

  /* KI explorer panel */
[guielement="explorer_header"],
[guielement="explorer_body"] {
    background: var(--surface);
    --text-color: var(--on-surface);
}
[guielement="explorer_body"] [guielement="tree_node_line"][mstyles~="selected"] {
    background: var(--on-surface);
    --text-color: var(--surface);
}
[guielement="explorer_body"] [guielement="tree_node_line"] [mtype="group"][mstyles~="tree_top_level"] {
    background: transparent;
}

/* KI Rich Text fields, and keyword block */


[guielement="block_body"],
[guielement="block_header"] { 
  background: transparent;
}
[guielement="memo_rich_text_area"] {
  background: var(--background);
  border-color: var(--on-background);
}
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="imagebutton"],
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="icon-button"] {
  filter: var(--on-background-filter);
}
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="imagebutton"]:hover,
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="icon-button"]:hover {
  filter: var(--primary-filter);
}
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="imagebutton"]:active,
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="icon-button"]:active {
  filter: var(--primary-muted-filter);
}
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="imagebutton"][disabled="true"],
[guielement="rich_text_memo_group"] > [guielement="block_header"] [guielement="icon-button"][disabled="true"] {
  filter: var(--on-disabled-filter);
}

/* KI tags */
.tagList > .tag {
    background: var(--background);
    border-color: var(--on-background);
}
.tagList > .tag > .tagName {
    color: var(--on-background);
}
.tagList > .tag > button {
    filter: var(--on-background-filter);
}
.tagList > .tag > button:hover {
    filter: var(--primary-filter);
}
.addTagOptions .optionsSeparator {
    color: var(--on-background);
}

.addTagOptions .td-field {
    background: var(--background);
    color: var(--on-background);
    border-color: var(--on-background);
}
.addTagOptions .td-field::placeholder {
    color: var(--on-background);
}
.addTagOptions .td-button {
    background: var(--background);
    color: var(--on-background);
    border-color: var(--on-background);
}
.addTagOptions .td-button:hover {
    background: var(--on-background);
    color: var(--background);
    border-color: var(--on-background);
}
.addTagOptions .td-field option {
    color: var(--on-background);
}
.addTagOptions .td-field option:disabled {
    font-style: italic;
}

/* KI Read version styles */
[guielement="kb-search-main-group"] {
  background: transparent;
  border: 1px solid var(--primary);
}
[guielement="kb-comment-group"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[guielement="kb-content"] a {
  color: var(--primary);
}
[guielement="kb-content"] a:hover {
  color: var(--primary-muted);
}
  /*
 * Email editor in email actions
 */

 /* Toolbar */
div#cke_emailEditor .cke_top {
  background: var(--surface);
}
div#cke_emailEditor .cke_top a.cke_button,
div#cke_emailEditor .cke_top a.cke_combo_button {
  filter: var(--on-surface-filter);
}
div#cke_emailEditor .cke_top a.cke_button:focus,
div#cke_emailEditor .cke_top a.cke_button:hover,
div#cke_emailEditor .cke_top a.cke_combo_button:focus,
div#cke_emailEditor .cke_top a.cke_combo_button:hover,
div#cke_emailEditor .cke_top span.cke_combo_on a.cke_combo_button {
  background: transparent;
  filter: var(--primary-filter);
}
div#cke_emailEditor .cke_top a.cke_button.cke_button_disabled {
  filter: var(--on-disabled-filter);
}
div#cke_emailEditor .cke_top a.cke_button.cke_button_disabled .cke_button_icon,
div#cke_emailEditor .cke_top a.cke_button.cke_button_disabled .cke_button_arrow {
  opacity: 1;
}

html.cke_panel_container .cke_panel_grouptitle {
  background: var(--surface);
  color: var(--on-surface);
}

html.cke_panel_container .cke_panel_list {
  background: var(--surface);
  color: var(--on-surface);
}

html.cke_panel_container .cke_panel_listItem a > * {
  color: var(--text-color);
}

html.cke_panel_container .cke_panel_listItem a:hover,
html.cke_panel_container .cke_panel_listItem a:focus {
  background: transparent;
  --text-color: var(--primary);
}

html.cke_panel_container .cke_panel_listItem.cke_selected a,
html.cke_panel_container .cke_panel_listItem a:active {
  background: var(--primary);
  --text-color: var(--on-primary);
}

/* Contents */
div#cke_emailEditor .cke_contents {
  background: var(--background);
}
  body[cardType="naturalselection"] {
  background: var(--background);
  color: var(--on-background);
  --text-color: var(--on-background);
}

body[cardType="naturalselection"] div#header div.title,
body[cardType="naturalselection"] legend span,
body[cardType="naturalselection"] .fieldlistheader,
body[cardType="naturalselection"] .linklistgroupheader,
body[cardType="naturalselection"] .linklistheader,
body[cardType="naturalselection"] table.tabcontrol {
  color: var(--text-color);
}

body[cardType="naturalselection"] a {
  color: var(--primary);
}

body[cardType="naturalselection"] table.fieldlist {
  --filter: var(--on-background-filter);
}

body[cardType="naturalselection"] table.fieldlist td:hover:not(.fieldlistheader),
body[cardType="naturalselection"] table.fieldlist td:focus-within:not(.fieldlistheader) {
  --filter: var(--primary-filter);
  --text-color: var(--primary);
}

body[cardType="naturalselection"] img.icon {
  background: transparent;
  filter: var(--filter);
}

body[cardType="naturalselection"] img.icon + a {
  color: var(--text-color);
}

/* Checkbox */
body[cardType="naturalselection"] .checkboxlayouter:not(#ie8) input.checkbox + label.checkbox {
  background: none;
  border: 1px solid var(--on-background);
  height: 16px;
  margin-top: 2px;
}

body[cardType="naturalselection"] .checkboxlayouter:not(#ie8) input.checkbox:checked + label.checkbox::before {
  content: '';
  position: absolute;
  border-bottom: 2px solid currentColor;
  border-left: 2px solid currentColor;
  top: 2px;
  left: 2px;
  width: 9px;
  height: 5px;
  transform: rotate(-45deg);
}
  /**
 * Various random things specific to certain cards
 */
 
/* 
 * Partial card info block (Partail Incident, Change Activity)
 */
[guielement="mg-infoblock-content"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="mg-infoblock-content"] img[guielement="icon"]:first-of-type {
  filter: var(--on-surface-filter);
}

/* 
 * Change breadcrumb
 */
[guielement="change_phase_breadcrumb"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="change_phase_breadcrumb"] > [mtype="label"] {
  color: var(--text-color) !important;
}

/*
 * Checklist
 */
div#checklist {
  background: var(--background);
  
  --text-color: var(--on-background);
  
  color: var(--text-color);
}

div#checklist .explanation-text,
div#checklist .checked-amount,
div#checklist .the-text {
  color: var(--text-color);
}

div#checklist .subtask-header .actions [role="button"] .icon.details,
div#checklist .subtask-header .actions button.date-button,
div#checklist .subtask-header .actions button.menu-button,
div#checklist .subtask-header .operator-and-date button {
  color: var(--text-color);
}

div#checklist .subtask-header .actions [role="button"]:hover .icon.details,
div#checklist .subtask-header .actions [role="button"]:focus .icon.details,
div#checklist .subtask-header .actions [role="button"] .icon.details.currently-edited,
div#checklist .subtask-header .actions button.date-button:hover,
div#checklist .subtask-header .actions button.menu-button:hover,
div#checklist .subtask-header .actions button.menu-button:focus,
div#checklist .subtask-header .actions button.date-button:focus,
div#checklist .subtask-header .actions button.date-button.currently-edited,
div#checklist .subtask-header .operator-and-date button:hover,
div#checklist .subtask-header .operator-and-date button:focus {
  color: var(--primary) !important;
}

div#checklist .subtask-header.hover,
div#checklist .subtask-header.hover .actions.hover {
  background: var(--on-background) !important;
  --text-color: var(--background);
} 

/* Context menu, Confirm, and Cancel buttons*/
div#checklist [role="button"] .icon.circle,
div#checklist button.menu-button .border,
div#checklist .modal-card.popup .close {
  color: var(--text-color);
  border-color: var(--text-color);
}

div#checklist [role="button"][aria-disabled="true"] .icon.circle {
  --text-color: var(--disabled);
  background: none;
}

div#checklist [role="button"]:hover .icon.circle,
div#checklist [role="button"]:focus .icon.circle,
div#checklist button.menu-button:hover .border,
div#checklist button.menu-button:focus .border,
div#checklist .modal-card.popup .close:hover,
div#checklist .modal-card.popup .close:focus {
  background: var(--primary);
  color: var(--on-primary);
  border-color: var(--primary);
}

/* Checkboxes */
div#checklist .check-container .check {
  background: var(--background);
  color: var(--on-background);
}

/* Template select */
div#checklist ul#templateList li.template-entry.selected {
  background: var(--selection);
  color: var(--on-selection);
}

div#checklist ul#templateList li.template-entry:hover {
  background: var(--primary);
  color: var(--on-primary);
}

/* Modal popup */
div#checklist .modal-card.popup .modal-card-head,
div#checklist .modal-card.popup .modal-card-body,
div#checklist .modal-card.popup .modal-card-foot {
  background: var(--surface);
  --text-color: var(--on-surface);
} 
div#checklist .modal-card.popup .modal-card-title {
  color: var(--on-surface);
}

/* Assign operator dialog & Date picker dialog*/
div#checklist [role="dialog"],
div#checklist .date-picker-popup,
div#checklist .date-picker-popup .date-picker-footer {
  background: var(--surface);
  --text-color: var(--on-surface);
  color: var(--text-color);
}

div#checklist [role="dialog"] li {
  color: var(--on-surface);
}

div#checklist [role="dialog"] li[role="option"]:hover {
  background: var(--on-surface);
  color: var(--surface);
}

div#checklist [role="dialog"] button.change-assignee-popover-action-button,
div#checklist .date-picker-popup .td-reset-date button,
div#checklist .date-picker-popup button.td-date-time-input-go-to-today {
  background: none;
  color: var(--primary);
}
div#checklist [role="dialog"] button.change-assignee-popover-action-button:hover,
div#checklist [role="dialog"] button.change-assignee-popover-action-button:focus,
div#checklist .date-picker-popup .td-reset-date button:hover,
div#checklist .date-picker-popup .td-reset-date button:focus,
div#checklist .date-picker-popup button.td-date-time-input-go-to-today:hover,
div#checklist .date-picker-popup button.td-date-time-input-go-to-today:focus {
  color: var(--primary-muted) !important;
}
div#checklist [role="dialog"] button.change-assignee-popover-action-button:active,
div#checklist .date-picker-popup .td-reset-date button:active,
div#checklist .date-picker-popup button.td-date-time-input-go-to-today:active {
  background: var(--primary);
  color: var(--on-primary) !important;
}

div#checklist .td-date-picker-container {
  background: var(--background);
}

div#checklist .help.is-danger {
  color: var(--error);
}

div#checklist .td-date-picker {
  color: var(--on-background);
}

div#checklist .td-date-picker-controls-container .td-date-picker-controls-current-date {
  color: var(--on-background);
}

div#checklist .td-date-picker .td-date-picker-header-cell {
  background: var(--background);
  color: var(--on-background);
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content.selectable {
  color: var(--on-background);
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content.weekend {
  background-color: var(--disabled);
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content:not(.currentMonth) {
  color: var(--on-disabled);
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content.today {
  border: 1px solid var(--primary-muted) !important;
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content.focused {
  border: 2px solid var(--primary) !important;
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content.selected {
  background-color: var(--primary) !important;
  color: var(--on-primary) !important;
}

div#checklist .td-date-picker .td-date-picker-cell .td-date-picker-cell-content:hover.selectable {
  background-color: var(--primary-muted) ;
  color: var(--on-primary);
}

div#checklist .date-and-time .control input + .icon {
  color: var(--on-background);
}

div#checklist .date-and-time .control input:focus {
  border-color: var(--on-background);
  box-shadow: none;
}

div#checklist .date-and-time .control input:focus + .icon {
  z-index: 1000; 
}

div#checklist .date-and-time .control input[aria-invalid="true"] {
  background: var(--background);
  color: var(--error);
  border-color: var(--error);
}

div#checklist .date-and-time .control input[aria-invalid="true"] + .icon {
  color: var(--error);
}
  
/* Panels */

[mstyles="planboard_dispatch_panel_main"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[mstyles="planboard_dispatch_panel_main"] [handle="filter_icon_box"],
[mstyles="planboard_dispatch_panel_main"] [guielement="icon"] {
  filter: var(--on-surface-filter);
}
[mstyles="planboard_dispatch_panel_main"] [handle="filter_icon_box"]:hover {
  filter: var(--primary-filter);
}

[mstyles="planboard_dispatch_panel_main"] [guielement^="planboard_work_item_draggable_"] {
  background: var(--background);
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}
[mstyles="planboard_dispatch_panel_main"] [guielement^="planboard_work_item_draggable_"]:hover {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}
[mstyles="planboard_dispatch_panel_main"] [guielement^="planboard_work_item_draggable_"][mstyles^="planboard_work_item_active_"] {
  background: var(--primary);
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}
#dragdiv > [guielement^="planboard_work_item_draggable_"] {
  background: var(--on-primary);
  --text-color: var(--primary);
  --filter: var(--primary-filter);
  border: 1px solid var(--primary);
}
#dragdiv [mstyles="planboard_work_item_first_text"],
#dragdiv [mstyles="planboard_work_item_second_text"] {
  color: var(--text-color);
}

[guielement^="planboard_work_item_draggable_"] [guielement="icon-button"],
[guielement="planboard_detail_header"] > [mstyles~="planboard_detail_section_caption"] [guielement="icon-button"],
[guielement="planner_detail_content"] [guielement="icon-button"] {
  filter: var(--filter);
}
[guielement^="planboard_work_item_draggable_"] [guielement="icon-button"]:nth-of-type(2),
[guielement="planboard_detail_header"] > [mstyles~="planboard_detail_section_caption"] [guielement="icon-button"]:nth-of-type(2),
[guielement="planner_detail_content"] [guielement="icon-button"]:nth-of-type(2) {
  filter: none;
}

[guielement="planboard_detail_header"] > [mstyles~="planboard_detail_section_caption"] {
  --filter: var(--on-background-filter);
}
[guielement="planboard_detail_header"] > [mstyles~="planboard_detail_section_caption"]:hover {
  --text-color: var(--primary);
  --filter: var(--primary-filter);
}

[guielement="planner_detail_content"] {
  --filter: var(--on-surface-filter);
}

[guielement="group_linked_information"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[guielement="group_linked_information"] [guielement="icon"] {
  filter: var(--on-surface-filter)
}

[guielement="planboard_detail_section_subgroup"] [guielement="pt-memo"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[guielement="planboard_detail_section_subgroup"] img[handle^="invisible-for-caller-label-"] {
  filter: var(--on-surface-filter);
}

[guielement="subwindow"][mstyles="planboard_dispatch_panel_filter_popup"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="subwindow"][mstyles="planboard_dispatch_panel_filter_popup"] :not([handle="planboard.dispatch.quickplanning"]) + [guielement="icon"] {
  filter: var(--on-surface-filter);
}

/* Toolbar */

[guielement="planboard_weekview_toolbar"] {
  background: var(--surface);
  --filter: var(--on-surface-filter);
}

[guielement="planboard_weekview_toolbar"] [guielement="icon-button"] {
  filter: var(--filter);
}
[guielement="planboard_weekview_toolbar"] [guielement="icon-button"]:hover {
  filter: var(--primary-filter);
}

[guielement="planboard_weekview_toolbar"] button[handle="planboard.action.visibletime"],
[guielement="planboard_weekview_toolbar"] button[handle="planboard.toolbar.show_todo"] {
  background: transparent;
  --text-color: var(--on-surface);
}
[guielement="planboard_weekview_toolbar"] button[handle="planboard.action.visibletime"]:hover,
[guielement="planboard_weekview_toolbar"] button[handle="planboard.toolbar.show_todo"]:hover {
  background: transparent;
  --text-color: var(--primary);
}

[guielement="planboard_weekview_toolbar"] [guielement="icon-button"][handle="day"],
[guielement="planboard_weekview_toolbar"] [guielement="icon-button"][handle="work_week"],
[guielement="planboard_weekview_toolbar"] [guielement="icon-button"][handle="week"] {
  /* These have two colours, and on/off can't be distinguished */
  filter: none;
}

/* Scheduler */
[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler"],
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"] {
  background: var(--surface);
  --filter: var(--on-surface-filter);
  --border: var(--on-surface);
  border-color: var(--border);
}
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"] > [mstyles~="planboard_quick_scheduler_daily_schedule"] {
  border-color: var(--border);
}

[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler"]:hover,
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"]:hover {
  --filter: var(--primary-filter);
}

[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler_pressed"],
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"][mstyles~="planboard_quick_scheduler_picker_pressed"] {
  background: var(--primary);
  --border: var(--on-primary);
  --filter: var(--on-primary-filter);
  border-color: var(--on-primary);
}

[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler_pressed"]:hover,
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"][mstyles~="planboard_quick_scheduler_picker_pressed"]:hover {
  background: var(--primary-muted);
}

[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler"] > [guielement="icon-button"],
[guielement="planboard_weekview_toolbar"] [mstyles~="planboard_quick_scheduler_enabler_pressed"] > [guielement="icon-button"],
[guielement="planboard_weekview_toolbar"] [handle="schedule-picker-button"] [handle="picker_part"] {
  filter: var(--filter);
}

[guielement="planner_toolbar_popup"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="planner_toolbar_popup"] [guielement="planboard_header"] {
  border-color: var(--text-color);
}

[guielement="planner_toolbar_popup"] [mstyles~="planboard_daily_schedule_list_item"] {
  background: var(--background);
  --text-color: var(--on-background);
  border-color: var(--on-background);
}

[guielement="planner_toolbar_popup"] [mstyles~="planboard_daily_schedule_list_item"]:hover {
  background: var(--primary);
  --text-color: var(--on-primary);
}

/* Grid */

/* Header */
[guielement="planboard_header"] [handle="actiedoor2.plural"] + [guielement="icon-button"] {
  filter: var(--on-background-filter);
}
[guielement="planboard_header"] [handle="actiedoor2.plural"] + [guielement="icon-button"]:hover {
  filter: var(--primary-filter);
}
[guielement="planboard_header"] [guielement="planner_period_header_cell"][mstyles="current_period"] {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
}

/* Operator group row */
[guielement="planner_row"] [guielement="planboard_operatorgroup_header"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

/* Operator row */
[guielement="planner_row"] [guielement="planboard_operator_cell"],
[guielement="planner_row"] [guielement="planner_item_title_cell"],
[guielement="planner_row"] [guielement="planner_cell"] {
  background: var(--background);
  --text-color: var(--on-background);
}

[guielement="planboard_operator_cell"] [mstyles="planboard_clickable planboard_zone_label"] {
  /* Resetting the color of the timezone button label, as it is printed on top of a dual colored icon */
  color: inherit;
}

/* Popups */
[handle="planboard_popup"] [guielement="planner_popup_window"],
[handle="planboard_popup"] [guielement="planboard_popup_header"],
[handle="planboard_popup"] [guielement="planboard_popup_footer"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[handle="planboard_popup"] [handle="planboard.todopopup.to_dispatch"]:hover {
  --text-color: var(--primary);
}

[handle="planboard_popup"] [guielement="planboard_work_item"] {
  background: var(--background);
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}

[handle="planboard_popup"] [guielement="planboard_work_item"][mstyles*="planboard_work_item_active_"] {
  background: var(--primary);
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}

[handle="planboard_popup"] [guielement="planboard_work_item"] [guielement="icon-button"]:first-of-type {
  filter: var(--filter);
}
  /* 
 * Filter panel 
 */
[guielement="planner_page_content"] [guielement="filter_panel"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="planner_page_content"] [guielement="filter_panel_header"],
[guielement="planner_page_content"] [guielement="filter_panel_header_folded"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="planner_page_content"] [guielement="filter_panel_body"] > [guielement="icon-button"] {
  filter: var(--on-surface-filter); 
}
[guielement="planner_page_content"] [guielement="filter_panel_body"] > [guielement="icon-button"]:hover {
  filter: var(--primary-filter);
}

/* date picker */
[mstyles="planner_datepicker_grid"] {
  /* background color creates the cell borders */
  background: var(--on-background);
}
/* day cell */
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_weekday"] {
  --text-color: var(--on-background);
  background: var(--background);
}
/* non-working day cell */
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_weekend"] {
  --text-color: var(--on-surface);
  background: var(--surface);
}
/* Special style for 'today' to aid orientation */
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_today"] {
  border-color: transparent;
}
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_today_label"] {
  --text-color: var(--primary);
}
/* currently selected cell */
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_weekday"][mstyles~="planner_datepicker_selected"],
[mstyles="planner_datepicker_grid"] [mstyles~="planner_datepicker_weekend"][mstyles~="planner_datepicker_selected"] {
  background: var(--primary-muted);
  --text-color: var(--on-primary);
}

/* 
 * Actions
 */
[guielement="planner_page_content"] [guielement="detail_panel_main"] {
  border: 1px solid var(--on-background);
}

[guielement="planner_page_content"] [guielement="detail_panel_main"][mstyles="planned"] {
  --status-color: #057aab;
}
[guielement="planner_page_content"] [guielement="detail_panel_main"][mstyles="terminated"] {
  --status-color: #178755;
}
[guielement="planner_page_content"] [guielement="detail_panel_main"][mstyles="request"] {
  --status-color: #eda911;
}

[guielement="planner_page_content"] [guielement="detail_panel_header"] {
  background: var(--surface);
  --text-color: var(--on-surface);
  border-bottom: 0px;
}

[guielement="planner_page_content"] [guielement="detail_panel_header"]::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 8px;
  background: var(--status-color);
}

[guielement="planner_page_content"] [guielement="detail_panel_body"] {
  background: var(--background) !important;
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}

[guielement="planner_page_content"] [guielement="detail_panel_tabbutton"][mstyles~="active"] {
  border-color: var(--primary);
  --text-color: var(--primary);
  --filter: var(--primary-filter);
}

[guielement="planner_page_content"] [guielement="detail_panel_tabbutton"] [guielement="icon"] {
  filter: var(--filter);
}

[guielement="planner_page_content"] [guielement="detail_panel_body"] [guielement="icon"] {
  filter: var(--filter);
}

[guielement="planner_page_content"] [guielement="detail_panel_group_header"] > [guielement="icon"]:first-of-type {
  filter: none;
}

[guielement="planner_page_content"] [guielement="detail_panel_body"] input[placeholder]::placeholder {
  color: var(--text-color) !important;
}

[guielement="planner_page_content"] [guielement="detail_panel_highlighted_block"] {
  background: var(--surface);
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);
}

[guielement="planner_page_content"] [guielement="detail_panel_highlighted_block"]::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 4px;
  background: var(--status-color);
}

[guielement="planner_page_content"] [guielement="detail_panel_highlighted_block"] [guielement="detail_panel_reserved_item"][mstyles~="hovered"] {
  background: var(--primary);
  --text-color: var(--on-primary);
}

[guielement="planner_popup_window"],
[guielement="planner_popup_window"] > [guielement="planner_popup_footer"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}

[guielement="planner_popup_window"] [guielement="spinner-button"] {
  background: transparent;
  filter: var(--on-surface-filter);
}
[guielement="planner_popup_window"] [guielement="spinner-button"]:hover {
  filter: var(--primary-filter);
}
[guielement="planner_popup_window"] [guielement="spinner-button"] + [guielement="textbox"] {
  background: var(--background);
  --text-color: var(--on-background);
}
[guielement="planner_popup_window"] [handle="reservations.services.edit.trash_bin"] {
  filter: var(--on-surface-filter);
}
[guielement="planner_popup_window"] [handle="reservations.services.edit.trash_bin"]:hover {
  filter: var(--primary-filter);
}

/*
 * Planner
 */
[handle="reservation.planner.main_view"] > [guielement="planner_header_row"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[handle="reservation.planner.main_view"] [guielement="mg-header"][mstyles~="reservable_items_group_header"] {
  background: var(--surface);
  --text-color: var(--on-surface);
}
[handle="reservation.planner.main_view"] [guielement="reservable_item_row"] {
  background: var(--background);
}
[handle="reservation.planner.main_view"] [guielement="reservable_item_row"] [handle^="servicewindow_shadow_"],
[handle="reservation.planner.main_view"] [guielement="reservable_item_row"] [handle^="blocked_period_shadow_"] {
  background: var(--disabled) !important;
}
[handle="reservation.planner.main_view"] [guielement="planner_item_title_cell"] {
  background: var(--background) !important;
}
[handle="reservation.planner.main_view"] [guielement="reservable_item_cell_icon"] > img {
  filter: var(--on-background-filter);
}
[handle="reservation.planner.main_view"] [guielement="reservable_item_cell_icon"] > img[handle$="_MINI_STAR_ON"],
[handle="reservation.planner.main_view"] [guielement="reservable_item_cell_icon"] > img[handle$="_MINI_STAR_OFF"],
[handle="reservation.planner.main_view"] [guielement="reservable_item_cell_icon"] > img[handle$="_MINI_STAR_ON_HOVER"] {
  filter: none;
}
[handle="reservation.planner.main_view"] [guielement="planner_room_capacity"] {
  background: var(--primary);
  --text-color: var(--on-primary);
}

#dragdiv {
  border-color: var(--on-background) !important;
}

/* New reservation column */
[handle="reservation.planner.main_view"] [guielement="background_shadow_section"] {
  background: repeating-linear-gradient(-45deg,
    transparent,
    transparent 9px,
    var(--primary) 9px,
    var(--primary) 10px);
}
[handle="reservation.planner.main_view"] [guielement="foreground_shadow_section"] {
  border-color: var(--primary);
  background: transparent;
}
[handle="reservation.planner.main_view"] [guielement="reservation_feedback_section"]:hover {
  border-color: var(--primary);
}
[handle="reservation.planner.main_view"] [guielement="reservation_feedback_section"][mstyles~="divisible_room_restriction"] {
  background: repeating-linear-gradient(-45deg,
    var(--primary-muted),
    var(--primary-muted) 6px,
    transparent 6px,
    transparent 10px);
  border-color: var(--primary-muted);
}
[handle="reservation.planner.main_view"] [guielement="reservation_feedback_section"][mstyles~="selected_section"] {
  background: var(--primary);
}
[handle="reservation.planner.main_view"] [guielement="reservation_feedback_section"][mstyles~="selected_section"] > img {
  filter: var(--on-primary-filter);
}

/* Reservation */
[handle="reservation.planner.main_view"] [guielement="reservation_section"] {
  background: var(--surface);
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);
}
[handle="reservation.planner.main_view"] [guielement="reservation_section"][mstyles~="selected_section"] {
  background: var(--on-surface);
  --text-color: var(--surface);
  --filter: var(--surface-filter);
}
[handle="reservation.planner.main_view"] [guielement="reservation_section"] > img {
  filter: var(--filter);
}
[handle="reservation.planner.main_view"] [guielement="block_time_section"] {
  background: repeating-linear-gradient(45deg,
    transparent,
    transparent 6px,
    var(--disabled) 6px,
    var(--disabled) 10px);
}
[handle="reservation.planner.main_view"] [guielement="block_time_section"] > img {
  display: none !important;
}

/* Availability popup */
[guielement="planner_popup_content"] [handle="availableassets"]~img[style*="width: 24px"] {
  filter: var(--on-surface-filter);
}

  /*
 * TASK BOARD and BOOKMARKS
 */

/* filter panel */
[guielement="taskboard_filter_panel"] {
    background: var(--background);
    --text-color: var(--on-background);
    --filter: var(--on-background-filter);
    border: 1px solid var(--on-background);
}
[guielement="taskboard_filter_panel_header"],
[guielement="taskboard_filter_panel_header_folded"] {
    background: var(--surface);
    --text-color: var(--on-surface);
    --filter: var(--on-surface-filter);
    border-color: var(--on-surface);
}

[guielement="taskboard_datefilter_button"] {
    border-color: var(--surface);
}
[guielement="taskboard_datefilter_button"] > [mtype="label"] {
    background: none;
}
[guielement="taskboard_datefilter_button"][mstyles~="taskboard_active_date_filter_caption"] {
    background: var(--primary);
    --text-color: var(--on-primary);
}

[guielement="taskboard_filter_panel_filter_fields"] [mstyles="taskboard_filter_panel_section"] {
    border-color: var(--on-background);
}

[guielement="taskboard_filter_panel_filter_fields"] [mstyles="taskboard_filter_panel_section"] [guielement="icon"] {
    filter: var(--filter);
}

/* task list */
[guielement="taskboard_item_border_group"] {
    border-color: var(--surface);
}

[guielement="taskboard_item_header"] {
    background: var(--background);
    --text-color: var(--on-background);
    --filter: var(--on-background-filter);
    border-color: var(--surface);
}
[guielement="taskboard_item_header"][mstyles~="unfolded"] {
    background: var(--surface);
    --text-color: var(--on-surface);
    --filter: var(--on-surface-filter);
}

[guielement="taskboard_bookmark_button"]:disabled {
    visibility: hidden !important;
}
[guielement="taskboard_task_icon"] {
    filter: var(--filter);
}

[guielement="taskboard_item_body"] {
    border-color: var(--surface);
}
[guielement="taskboard_item_body"] [guielement="taskboard_task_body_data_panel"] {
    background: var(--surface);
    --text-color: var(--on-surface);
}
[guielement="taskboard_item_body"] [guielement="pt-memo"] {
    background: var(--surface);
    border-color: var(--on-surface);
    --text-color: var(--on-surface);
    
}
[guielement="taskboard_item_body"] [guielement="pt-memo"][mstyles~="pt-flagged"] {
    background: var(--primary);
    --text-color: var(--on-primary);
}

[guielement="taskboard_item_body"] [guielement="pt-memo"] [guielement="pt-entry-sidebar"][mstyles~="pt-invisible"] {
    background: repeating-linear-gradient(-45deg, var(--surface) 0px, var(--surface) 8px, var(--background) 8px, var(--background) 16px);
}

[guielement="taskboard_item"]:hover [guielement="taskboard_item_header"],
[guielement="taskboard_item"]:focus-within [guielement="taskboard_item_header"],
[guielement="taskboard_item"]:hover [guielement="taskboard_item_body"],
[guielement="taskboard_item"]:focus-within [guielement="taskboard_item_body"] {
    border-color: var(--primary-muted);
}
}
@-moz-document regexp("http(s)?://.*/tas/secure/grid.*"),
               regexp("http(s)?://.*/tas/secure/.*?action=.*") {
  /*
 * Grids
 */

/*
 * The checkboxes are a dual colored image on top of a native checkbox.
 * Unfortunately neither one can be recolored or styled effectively.
 */

html, body {
  background: transparent;
}

body[cardtype="grid"] {
  background: var(--background);
  color: var(--on-background);
}
body[cardtype="grid"] .header {
  border-color: var(--on-surface);
}

body[cardtype="grid"] .topbar .filter > a {
  color: var(--primary);
}
body[cardtype="grid"] .topbar .filter > a:hover {
  color: var(--primary-muted);
}
body[cardtype="grid"] .topbar .filter > a:focus {
  outline: 2px solid var(--on-background);
  outline-offset: 2px;
}

/* Grid buttons */
body[cardtype="grid"] #actionbar .button {
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
  
  background: var(--background);
  border-color: var(--on-background);
  color: var(--text-color);

  margin-top: 4px;
  height: 24px;
  line-height: 24px;
}

body[cardtype="grid"] #actionbar .menu-button > .chevron {
  filter: var(--filter);
}

body[cardtype="grid"] #actionbar .button:hover,
body[cardtype="grid"] #actionbar .button.menu-button.toggled {
  background: var(--on-background);
  border-color: var(--on-background);
  
  --text-color: var(--background);
  --filter: var(--background-filter);
}

body[cardtype="grid"] #actionbar .button:focus {
  outline: 2px solid var(--primary) !important;
  outline-offset: 2px;
  isolation: isolate;
}

body[cardtype="grid"] #actionbar .button:active {
  background: var(--surface);
  border-color: var(--on-surface);
  
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);
}

body[cardtype="grid"] #actionbar .button.preferred {
  background: var(--primary);
  border-color: var(--primary);
  
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}

body[cardtype="grid"] #actionbar .button.preferred:hover {
  background: var(--primary-muted);
  border-color: var(--primary-muted);
  
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}

body[cardtype="grid"] #actionbar .button.preferred:active {
  background: var(--on-primary);
  border-color: var(--primary);
  
  --text-color: var(--primary);
  --filter: var(--primary-filter);
}

body[cardtype="grid"] #actionbar #reload-grid-button,
body[cardtype="grid"] #actionbar .button.setup_button {
  position: relative;
}

body[cardtype="grid"] #actionbar #reload-grid-button::before,
body[cardtype="grid"] #actionbar .button.setup_button::before {
  content: '';
  position: absolute;
  filter: var(--filter);
  top: 4px;
  height: 16px;
  width: 16px; 
  pointer-events: none;
}

/* grid reload button */
body[cardtype="grid"] #actionbar #reload-grid-button::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath fill='%23757576' d='M14.9 6V0L13 1.9C9.8-.6 5.3-.4 2.4 2.5c-3.1 3.1-3.1 8.1 0 11.2 3.1 3.1 8.1 3.1 11.2 0 1.4-1.4 2.1-3.1 2.3-4.9h-2.7c-.1 1.1-.6 2.2-1.5 3-2.1 2.1-5.4 2.1-7.5 0-2.1-2.1-2.1-5.4 0-7.5 1.8-1.8 4.7-2 6.8-.6L8.9 6h6z'/%3E%3C/svg%3E");
  left: 8px;
}
/* grid setup button */
body[cardtype="grid"] #actionbar .button.setup_button::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16px' height='16px'%3E%3Cpath d='M13.9 7.2l1.8-.7-1.1-2.8-1.8.7c-.3-.5-.7-.8-1.2-1.2l.7-1.8L9.6.3l-.8 1.8c-.5-.1-1.1-.1-1.6 0L6.4.3 3.6 1.4l.7 1.8c-.4.4-.8.8-1.1 1.2l-1.8-.8L.3 6.4l1.8.7c-.1.6-.1 1.2 0 1.7l-1.8.8 1.1 2.8 1.8-.7c.3.5.7.8 1.2 1.2l-.7 1.8 2.8 1.1.7-1.8c.5.1 1.1.1 1.7 0l.7 1.8 2.8-1.1-.7-1.8c.5-.3.8-.7 1.2-1.2l1.8.7 1.1-2.8-1.8-.7c0-.6 0-1.2-.1-1.7zm-4.7 3.6c-1.5.6-3.3-.1-3.9-1.6s.1-3.3 1.6-3.9c1.5-.6 3.3.1 3.9 1.6.6 1.5-.1 3.2-1.6 3.9z'/%3E%3C/svg%3E");
  left: 7px;
}

/* Grid menu */
body[cardtype="grid"] .more-menu {
  background: var(--surface);
}
body[cardtype="grid"] .more-menu .menu-item {
  color: var(--on-surface);
}

body[cardtype="grid"] .more-menu .menu-item:hover,
body[cardtype="grid"] .more-menu .menu-item:focus {
  outline: none !important;
  background: var(--on-surface);
  color: var(--surface);
}

/* grid container */
body[cardtype="grid"] .stretchdiv {
  background: var(--background);
}

/* column headers */
#headers .column {
  --text-color: var(--on-surface);
  --filter: var(--on-surface-filter);

  background: var(--surface);
  color: var(--text-color);
}
#headers .column .ordericon {
  filter: var(--filter);
}
/* column header separator */
#headers .column .sizer #border {
  background: var(--on-surface);
}
#headers .column.highlight {
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);

  background: var(--primary);
}
/* bottom bar */
body[cardtype="grid"] .bottombar {
  background: var(--surface);
  color: var(--on-surface);
}
body[cardtype="grid"] .bottombar .currentpage {
  color: var(--primary);
}
body[cardtype="grid"] .bottombar a {
  color: var(--on-surface);
}

/* data cells */
div#columnsscroll {
  background: var(--background);
}
div#columnsscroll .column span {
  color: var(--text-color);
}
div#columnsscroll .column#_status span > .gridicon {
  filter: var(--filter);
}
div#columnsscroll .column .normal,
div#columnsscroll .column .overduechanged,
div#columnsscroll .column .overduenew {
  --text-color: var(--on-background);
  --filter: var(--on-background-filter);
}
div#columnsscroll .column .overduealert {
  /* Due today */
  background: var(--primary-muted);
  --text-color: var(--on-primary);
  --filter: var(--on-primary-filter);
}
div#columnsscroll .column .overduealarm {
  /* Overdue */
  --text-color: var(--error);
  --filter: var(--error-filter);
}
div#columnsscroll .column .archived {
  --text-color: var(--primary);
  --filter: var(--primary-filter);
}
/* highlight bar */
div#columnsscroll div#selected.focus {
  background: none;
  border: 1px solid var(--primary);
}
div#columnsscroll div#selected.nofocus {
  background: none;
  border: 1px solid var(--on-background);
}
/* column separator */
div#columnsscroll .column {
  border-color: var(--on-background);
}

/* details */
#detailframediv .ui-resizable-handle {
  filter: var(--on-background-filter);
}
#detailsbody .memocontainer {
  color: var(--on-background);
  border-color: var(--on-background);
}

} 
@-moz-document regexp("http(s)?://.*/tas/secure/agileboard/.*") {
  body {
  background: var(--background) !important;
  
  --outline-color: var(--on-background);
  --text-color: var(--on-background);
}

:is(h1, h2, h3, h4, h5, h6).title {
  color: var(--text-color) !important;
}
div.title.is-5 {
  /* Assign to "heading" in the 'Create note' popup */
  color: var(--text-color);
}

p.label {
  color: var(--text-color);
}
.choose-board label.filterlabel {
  /* choose board select label */
  color: var(--text-color);
}

a.has-text-link {
  color: var(--primary) !important;
}
a.has-text-link:hover {
  background: var(--on-background);
  color: var(--background) !important;
}
a.has-text-link:focus {
  outline: 2px solid var(--outline-color);
  color: var(--primary) !important;
}

#board-data-with-side-panel .resizable-container .resizer {
  /* resize handle between board and sidebar */
  border-color: var(--on-background);
}

/*
 * Top row link buttons
 */
.filter-button > i.icon,
.filter-button > a,
.all-boards-button > i.icon,
.all-boards-button > a {
  color: var(--text-color) !important;
}
.filter-button > a,
.all-boards-button > a {
  outline: none;
}
.filter-button:hover,
.all-boards-button:hover {
  --text-color: var(--primary);
}
.all-boards-button:focus-within {
  outline: 2px solid var(--outline-color);
  outline-offset: 2px;
}
.filter-button:focus-within {
  outline: 2px solid var(--outline-color);
  outline-offset: -2px;
}

.filter-header.active .filter-button {
  background: var(--surface);
  --text-color: var(--on-surface);
}
.filter-header.active .filter-button:hover {
  --text-color: var(--primary);
}

/*
 * Filter bar
 */
.header .filter-bar {
  background: var(--surface);
}
.header .filter-bar label {
  color: var(--on-surface);
}
.toggle-button-group input[type="radio"] + .button {
  background: var(--background);
  color: var(--on-background);
  border-color: var(--on-background);
}
.toggle-button-group input[type="radio"]:hover + .button {
  background: var(--on-background);
  color: var(--background);
}
.toggle-button-group input[type="radio"]:active + .button {
  background: var(--background);
  color: var(--primary);
  border-color: var(--primary);
}
.toggle-button-group input[type="radio"]:checked + .button {
  background: var(--primary);
  color: var(--on-primary);
  border-color: var(--primary);
}
.toggle-button-group input[type="radio"]:checked:hover + .button {
  background: var(--primary-muted);
  border-color: var(--primary-muted);
}
.toggle-button-group input[type="radio"]:focus + .button {
  outline: 2px solid var(--on-surface);
  outline-offset: 2px;
  z-index: 1;
}

/*
 * Button
 */
button.button,
button.calendar-button {
  --bg-color: var(--background);
  --text-color: var(--on-background);
  --border-color: var(--on-background);
  
  background: var(--bg-color) !important;
  border-color: var(--border-color) !important;
  color: var(--text-color) !important;
  
  isolation: isolate;
  
  transition: none !important;
}
button.button:hover,
button.calendar-button:hover {
  --bg-color: var(--on-background);
  --text-color: var(--background);
}
button.button:active,
button.calendar-button:active {
  --bg-color: var(--surface);
  --text-color: var(--on-surface);
  --border-color: var(--on-surface);
}
button.button:focus,
button.calendar-button:focus {
  outline: 2px solid var(--outline-color) !important;
  outline-offset: 2px !important;
  box-shadow: none !important;
}
button.button .icon {
  color: var(--text-color);
}

button.button.is-primary {
  --bg-color: var(--primary);
  --text-color: var(--on-primary);
  --border-color: var(--primary);
}
button.button.is-primary:hover {
  --bg-color: var(--primary-muted);
  --border-color: var(--primary-muted);
}
button.button.is-primary:active {
  --bg-color: var(--on-primary);
  --text-color: var(--primary);
}

button.button.is-primary[disabled],
button.button[disabled] {
  --bg-color: var(--disabled);
  --text-color: var(--on-disabled);
  --border-color: var(--on-disabled);
  
  pointer-events: none;
}

button.is-primary.is-selected {
  --bg-color: var(--on-background);
  --text-color: var(--background);
  --border-color: var(--on-background);
}

/* assign to me button in Çreate note' popup */
button.button.circle[disabled] {
  background: var(--bg-color) !important;
  border-color: var(--border-color) !important;
}

/*
 * Menu
 */
ul.button-submenu {
  background: var(--surface);
  color: var(--on-surface);
}
ul.button-submenu li {
  --bg-color: var(--surface);
  --color: var(--on-surface);
  
  background: var(--bg-color) !important;
  color: var(--text-color) !important;
}
ul.button-submenu li:focus,
ul.button-submenu li:hover {
  --bg-color: var(--on-surface);
  --text-color: var(--surface);
}
ul.button-submenu li:focus {
  outline: none;
}
ul.button-submenu li.item.divided {
  border-top-color: var(--on-surface);
}

/*
 * Popup
 */
header.modal-card-head {
  background: var(--surface);
  border-color: var(--on-surface);
  
  --outline-color: var(--on-surface);
  --text-color: var(--on-surface);
}
header.modal-card-head > .modal-card-title {
  color: var(--text-color);
}
header.modal-card-head > button.delete {
  background: var(--background);
  border-color: var(--on-background);
  
  --color: var(--on-background);
}
header.modal-card-head > button.delete:hover {
  background: var(--primary);
  border-color: var(--primary);
  
  --color: var(--on-primary);
}
header.modal-card-head > button.delete:active {
  background: var(--on-primary);
  border-color: var(--primary);
  
  --color: var(--primary);
}
header.modal-card-head > button.delete:focus {
  box-shadow: none;
  outline: 2px solid var(--outline-color);
  outline-offset: 2px;
}
header.modal-card-head > button.delete::before,
header.modal-card-head > button.delete::after,
header.modal-card-head > button.delete:active::before,
header.modal-card-head > button.delete:active::after,
header.modal-card-head > button.delete:hover::before,
header.modal-card-head > button.delete:hover::after {
  background: var(--color);
}
section.modal-card-body {
  background: var(--surface);
  
  --text-color: var(--on-surface);
}
footer.modal-card-foot {
  background: var(--surface);
  border-color: var(--on-surface);
  
  --text-color: var(--on-surface);
}

/* Help popup shortcuts */
div.item.label {
  color: var(--text-color);
}
div.item.label > span {
  border-color: var(--on-background);
  background: var(--background);
  color: var(--on-background);
}

/*
 * Field
 */
.field .field-label label.label {
  color: var(--text-color);
}

.field.is-danger label.label {
  color: var(--error);
}

input.input,
textarea.textarea,
.select select {
  --bg-color: var(--background);
  --border-color: var(--on-background);
  --text-color: var(--on-background);
  
  background: var(--bg-color) !important;
  color: var(--text-color) !important;
  border-color: var(--border-color) !important;
}

input.input:invalid,
.select select:invalid,
.field.is-danger input.input {
  --text-color: var(--error);
  --border-color: var(--error);
}

input.input:focus,
textarea.textarea:focus,
.select select:focus {
  outline: 2px solid var(--outline-color);
  outline-offset: 2px;
  box-shadow: none;
}

input.input[disabled],
textarea.textarea[disabled],
.select select[disabled] {
  --bg-color: var(--disabled);
  --text-color: var(--on-disabled);
  --border-color: var(--on-disabled);
}

.select select {
  appearance: auto;
}


input.is-checkradio + label {
  --check-bg-color: var(--background);
  --check-color: var(--on-background);
  --check-border-color: var(--on-background);
  
  color: var(--text-color);
  margin-left: 4px !important; /* making space for the outline */
}
input.is-checkradio + label::before,
input.is-checkradio:checked + label::before {
  background: var(--check-bg-color) !important;
  border-color: var(--check-border-color) !important;
  box-shadow: none !important;
}
input.is-checkradio + label::after {
  border-color: var(--check-color) !important;
}
input.is-checkradio:focus + label::before {
  outline: 2px solid var(--outline-color) !important;
  outline-offset: 2px;
}
input.is-checkradio[type="checkbox"]:hover:not([disabled]) + label::before,
input.is-checkradio[type="checkbox"]:focus:not([disabled]) + label::before {
  border-color: var(--check-border-color) !important;
}

#provide-title {
  /* making space for the outline of the provide title field in the create board popup */
  margin-top: 4px;
}

/*
 * Date picker
 */
#due-date-input .date-picker {
  background: var(--surface);
}
#due-date-input .td-date-picker-container {
  background: var(--surface);
}
#due-date-input .td-date-picker-controls-container .td-date-picker-controls-current-date {
  color: var(--on-surface);
}
#due-date-input .td-date-picker-controls-container button {
  --bg-color: var(--background);
  --text-color: var(--on-background);
  --border-color: var(--on-background);
  
  background: var(--bg-color) !important;
  color: var(--text-color) !important;
  border-color: var(--border-color) !important;
}
#due-date-input .td-date-picker-controls-container button:hover {
  --bg-color: var(--primary);
  --text-color: var(--on-primary);
  --border-color: var(--primary);
}
#due-date-input .td-date-picker-controls-container button:active {
  --bg-color: var(--on-primary);
  --text-color: var(--primary);
  --border-color: var(--primary);
}
#due-date-input .td-date-picker-controls-container button:focus {
  outline: 2px solid var(--on-surface);
  outline-offset: 2px;
  box-shadow: none;
}
#due-date-input button.td-date-time-input-go-to-today {
  background: var(--surface);
  color: var(--on-surface);
}
#due-date-input button.td-date-time-input-go-to-today:hover {
  text-decoration: underline;
}
#due-date-input button.td-date-time-input-go-to-today:focus {
  color: var(--primary);
  text-decoration: underline;
  outline: none;
}
#due-date-input table:focus-visible {
  outline: 2px solid var(--on-surface);
  outline-offset: 2px;
}
#due-date-input th.td-date-picker-header-cell {
  color: var(--on-surface);
  background-color: var(--surface);
}
#due-date-input td.td-date-picker-cell {
  border-color: var(--on-background);
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.label {
  background: var(--background);
  color: var(--on-background);
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.label.selectable:hover {
  background-color: var(--primary-muted);
  color: var(--on-primary);
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.weekend {
  background: var(--surface);
  color: var(--on-surface);
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.today {
  color: var(--primary);
  border-color: transparent !important;
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.selected {
  background: var(--primary) !important;
  color: var(--on-primary);
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.focused {
  border-color: var(--primary) !important;
}
#due-date-input td.td-date-picker-cell > div.td-date-picker-cell-content.selected.focused {
  border-color: var(--on-primary) !important;
}


/*
 * Notification
 */
div.notification.is-primary {
  background: var(--background);
  color: var(--on-background);
  border: 1px solid var(--on-background);
}
div.notification.is-primary .icon {
  color: var(--on-background);
}
div.notification.is-warning {
  background: var(--background);
  color: var(--on-background);
  border: 2px solid var(--primary);
}
div.notification.is-warning .icon {
  color: var(--primary);
}
div.notification.is-warning a.close {
  color: var(--primary);
}
div.notification.is-warning a.close:focus {
  outline: 2px solid var(--on-background);
  outline-offset: 2px;
}
div.notification.is-warning a.close:hover {
  background: var(--on-background);
  color: var(--background);
}


/*
 * Board
 */

.board .header {
  background: transparent;
}
.board #lanes-headers {
  background: transparent;
}
.board .lane-header {
  background: var(--surface);
}
.board .lane-header .label {
  color: var(--on-surface);
}
.board .lane-header .lane-task-count {
  background: var(--background);
  color: var(--on-background);
  border: 1px solid var(--on-background);
}
.board .lane {
  background: var(--surface);
}

:is(.gu-unselectable, .board) .task-container {
  --text-color: var(--on-background);
  
  background: var(--background);
  border: 1px solid var(--on-background);
  color: var(--text-color);
}
:is(.gu-unselectable, .board) .task-container div[handle="assignee-avatar-initials"] > .vue-avatar--wrapper {
  background-color: var(--background) !important;
  border: 1px solid var(--on-background);
  color: var(--on-background) !important; 
}
:is(.gu-unselectable, .board) .task-container [handle="assignee-avatar"]:focus {
  outline: 1px solid var(--primary);
}

:is(.gu-unselectable, .board) .task-container .is-black-link {
  color: var(--text-color);
}
:is(.gu-unselectable, .board) .task-container .is-black-link:focus {
  outline: none;
  color: var(--primary);
  text-decoration: underline;
}

:is(.gu-unselectable, .board) .task-container .formatted-text {
  color: var(--text-color);
}

:is(.gu-unselectable, .board) .task-container .icon {
  color: var(--text-color) !important;
}
:is(.gu-unselectable, .board) .task-container .overdue {
  color: var(--error);
}

:is(.gu-unselectable, .board) .task-container:focus,
:is(.gu-unselectable, .board) .task-container:focus-within {
  background: var(--background);
  border-color: var(--primary);
  outline: none;
  border-left-width: 8px;
  
  --text-color: var(--on-background);
}

.board .task-container.closed:not(:focus):not(:focus-within):not(:hover) {
  background: var(--disabled);
  --text-color: var(--on-disabled);
}

.board .task-container.closed:not(:focus):not(:focus-within):hover,
.gu-unselectable .task-container.closed {
  background: var(--background);
  --text-color: var(--on-background);
}

:is(.gu-unselectable, .board) .task-container .task-content.has-folded-corner::after {
  border-color: var(--on-background) var(--surface);
}
:is(.gu-unselectable, .board) .task-container:focus .task-content.has-folded-corner::after,
:is(.gu-unselectable, .board) .task-container:focus-within .task-content.has-folded-corner::after {
  border-color: var(--primary) var(--surface);
}

.board .task-container.gu-transit {
  background: var(--on-primary);
  border-color: var(--primary);
  --text-color: var(--primary);
}

/*
 * Sidebar
 */

#side-panel {
  background: var(--background);
  --outline-color: var(--on-background);
  --text-color: var(--on-background);
}

#side-panel #side-panel-header span.card-header {
  color: var(--text-color);
}
#side-panel #side-panel-header a.is-black-link {
  color: var(--text-color);
}
#side-panel #side-panel-header a.is-black-link:hover {
  text-decoration: underline;
}
#side-panel #side-panel-header a.is-black-link:focus {
  outline: none;
  --text-color: var(--primary);
  text-decoration: underline;
}
#side-panel #side-panel-header .icon {
  color: var(--text-color) !important;
}
#side-panel #side-panel-header button.close-button {
  --bg-color: var(--background);
  --text-color: var(--on-background);
  --border-color: var(--on-background);
}
#side-panel #side-panel-header button.close-button:hover {
  --bg-color: var(--primary);
  --text-color: var(--on-primary);
  --border-color: var(--primary);
}
#side-panel #side-panel-header button.close-button:active {
  --bg-color: var(--on-primary);
  --text-color: var(--primary);
  --border-color: var(--primary);
}
#side-panel .parent-block {
  --text-color: var(--on-surface);
  background: var(--surface);
  color: var(--text-color);
}
#side-panel .parent-block .icon {
  color: var(--text-color) !important;
}

#side-panel .task-details .caller-name,
#side-panel .task-details .branch-name,
#side-panel .task-details .label,
#side-panel .content .label {
  color: var(--text-color);
}
#side-panel .content .description-container {
  --text-color: var(--on-background);
  background: var(--background);
  border: 1px solid var(--primary);
}
#side-panel .content .description-container::after {
  border-color: var(--primary) var(--background);
  bottom: -1px;
  right: -1px;
}
#side-panel .content .description-container .creation-date,
#side-panel .content .description-container .description {
  color: var(--text-color);
}


#side-panel .progresstrail .pt-entry {
  --text-color: var(--on-surface);
  background: var(--surface);
  color: var(--text-color);
  border-color: var(--on-surface);
}
#side-panel .progresstrail .pt-entry .pt-header,
#side-panel .progresstrail .pt-entry .pt-header .pt-date,
#side-panel .progresstrail .pt-entry a,
#side-panel .progresstrail .pt-entry .icon,
#side-panel .progresstrail .pt-entry figcaption {
  color: var(--text-color) !important;
}
#side-panel .progresstrail .pt-entry a:active {
  --text-color: var(--primary);
}
#side-panel .progresstrail .pt-entry a:focus {
  outline: 2px solid var(--outline-color);
  outline-offset: 2px;
}
#side-panel .progresstrail .pt-entry.flagged {
  --text-color: var(--on-primary);
  background: var(--primary);
}
#side-panel .progresstrail .pt-entry.invisible {
  border-left-color: var(--primary);
}
}
@-moz-document regexp(".*") {
  body.cke_editable,
body.cke_editable * {
  background: var(--background) !important;
  color: var(--on-background) !important;
}
body.cke_editable a {
  color: var(--primary) !important;
}
body.cke_editable::selection,
body.cke_editable *::selection {
  background: var(--selection);
  color: var(--on-selection);
}
}
